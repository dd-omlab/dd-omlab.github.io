% WYSIWYG.m:  Either 1) Force the figure to print as it appears on the screen%              or    2) Adjust the figure to show how it will look when printed.%% Usage:  wysiwyg( action )  where action = 1 or 2% Written by:  Jonathan Jacobs%              March 1998  (last mod: 03/30/98)% (based on code from "Graphics and GUIs with MATLAB" by Patrick Marchand)          function wysiwyg( action )[comp] = computer;gf = findHotW;if gf == -1   disp('No valid figure window present.')   returnendif nargin == 0   disp('WYSIWYG options:')   disp('  0) Quit.')   disp('  1) Force figure to print as it appears on the screen')   disp('  2) Modify figure to show what it will look like when printed')   action = -1;   while (action < 0) | (action > 2)      action = input('--> ');   endendif action == 0   disp('Cancelling.')   returnend% First get units of figure so they can be restoredfigureunits = get(gf,'units');% Next, set fig units to paperunitsset(gf,'units', get(gf,'paperunits'));% Get the paper and figure positionspaperpos = get(gf,'paperpos');papersize = get(gf,'papersize');figpos = get(gf,'position');if action == 1   % Determine if the figure will fit in portrait or landscape orientation   fitsportrait  = (papersize(1)>figpos(3) & ...                     papersize(2)>figpos(4));   fitslandscape = (papersize(2)>figpos(3) & ...                     papersize(1)>figpos(4));      % Set the figure units back to their original units   set(gf,'units',figureunits);      % If the figure fits as sized, determine the appropriate paper position   % that will center it on the page and then print the figure.  If not,   % display a warning message   if fitsportrait | fitslandscape      if ~fitsportrait         set(gf,'paperorientation','landscape');         papersize=fliplr(papersize);      end      paperposleft = (papersize(1)-figpos(3))/2;      paperposbottom = (papersize(2)-figpos(4))/2;      set(gf,'paperposition', [paperposleft paperposbottom figpos(3:4)]);      disp('Figure will print as it appears on the screen.')    else      disp('The figure is too big to fit on the page')      return   end elseif action == 2   % Create a new figure pos that does not   % alter the lower left-hand corner pos, but   % does change the width & height of the figure   % to match the PaperPosition width & height.   newfigpos = [figpos(1:2) paperpos(3:4)];      % Change the figure position to the new position   set(gf,'position',newfigpos);      % Restore the figure units.   set(gf,'units',figureunits);      disp('This is how the figure will appear when printed.')   figure(gf)enddisp('   ')disp('Print options:')disp('  0) Don''t print.')disp('  1) Standard ''print''')disp('  2) Print using ''-dljet3''')action=-1;while action<0 | action>2   action = input('--> ');endif action == 0   disp('Will not print.')   return elseif action == 1   disp('...printing...')   print elseif action == 2   if strcmp(lower(comp(1)),'p')      disp('...printing with ''ljet3'' ghostscript driver...')      print -dljet3    else      disp('...Macs don''t need ghostscript to print correctly...')      print   endend