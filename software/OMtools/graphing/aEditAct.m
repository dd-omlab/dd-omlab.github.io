% aEditAct.m:  called by axisedit to make the changes to axis properties.% Written by:  Jonathan Jacobs%              March 1997 - February 2006 (last mod: 02/16/06)% June 2019: rewritten for HG2function aEditAct(src,action)persistent prevHotWaeFig=findwind('Axis Editor','name');if ishandle(aeFig)   h=aeFig.UserData;else   %disp('Cannot find the axis editing tool')   %beep   returnendif nargin==1   %called by a refresh event   if strcmpi(src,'focusgained')      % if new hotW is the previous hotW, no need to refresh      if prevHotW==findHotW         return      else         action='focusgained';      end   else      return   end else   % control,axis numbers stored in Tag   tag=str2num(src.Tag); %#ok<ST2NM>   c_num = tag(1);   axnum = tag(2);   ga=src.UserData;   try    gf=ga.Parent;   catch, return; endend   switch action   case 'cbox'            switch c_num         case 1            newstate=h.axPropH(c_num,axnum).Value;            if newstate==0               ga.XTickLabel=[];            elseif newstate==1               ga.XTickLabelMode='auto';            end         case 2            newstate=h.axPropH(c_num,axnum).Value;            if newstate==0               ga.XGrid='off';            elseif newstate==1               ga.XGrid='on';            end         case 3            newstate=h.axPropH(c_num,axnum).Value;            if newstate==0               ga.YTickLabel=[];            elseif newstate==1               ga.YTickLabelMode='auto';            end         case 4            newstate=h.axPropH(c_num,axnum).Value;            if newstate==0               ga.YGrid='off';            elseif newstate==1               ga.YGrid='on';            end         case 5            newstate=h.axPropH(c_num,axnum).Value;            if newstate==0               ga.ZTickLabel=[];            elseif newstate==1               ga.ZTickLabelMode='auto';            end         case 6            newstate=h.axPropH(c_num,axnum).Value;            if newstate==0               ga.ZGrid='off';            elseif newstate==1               ga.ZGrid='on';            end         case 7            newstate=h.axPropH(c_num,axnum).Value;            if newstate==0               ga.XScale='linear';            elseif newstate==1               ga.XScale='log';            end         case 8            newstate=h.axPropH(c_num,axnum).Value;            if newstate==0               ga.YScale='linear';            elseif newstate==1               ga.YScale='log';            end         case 9            newstate=h.axPropH(c_num,axnum).Value;            if newstate==0               ga.ZScale='linear';            elseif newstate==1               ga.ZScale='log';            end         case 10            newstate=h.aeBoxH(axnum).Value;            if newstate==0               ga.Box='off';            elseif newstate==1               ga.Box='on';            end         case 11            newstate=h.invertAxPropH.Value;            if newstate==1               % black bg, white objects               gf.Color='k';               gf.InvertHardcopy='on';               for jj=1:length(ga)                  if all( get(get(ga(jj),'Title'),'Color')==[0 0 0] )                     set(get(ga(jj),'Title'),'Color',[1 1 1])                  end                  ga(jj).Color='k';                  ga(jj).XColor='w';                  ga(jj).YColor='w';                  ga(jj).ZColor='w';                  for ii = 1:length(h.axObjH)                     if ishandle(h.axObjH(ii,jj))                        if strcmpi(h.axObjH(ii,jj).Type,'line') || ...                              strcmpi(h.axObjH(ii,jj).Type,'text')                           if all( h.axObjH(ii,jj).Color==[0 0 0] )                              h.axObjH(ii,jj).Color=[1 1 1];                           end                        end                     end                  end %for ii               end %for jj            elseif newstate==0               % white bg, black objects               gf.Color='w';               gf.InvertHardcopy='off';               for jj=1:length(ga)                  if all( get(get(ga(jj),'Title'),'Color')==[1 1 1])                     set(get(ga(jj),'Title'),'Color',[0 0 0])                  end                  ga(jj).Color='w';                  ga(jj).XColor='k';                  ga(jj).YColor='k';                  ga(jj).ZColor='k';                  for ii=1:length(h.axObjH)                     if ishandle(h.axObjH(ii,jj))                        if strcmpi(h.axObjH(ii,jj).Type,'line') || ...                              strcmpi(h.axObjH(ii,jj).Type,'text')                           if all( h.axObjH(ii,jj).Color==[1 1 1] )                              h.axObjH(ii,jj).Color=[0 0 0];                           end                        end                     end                  end %for ii               end %for jj            end %if newstate            aEditAct(src,'update')            %aEditAct(get(gco,'UserData'),get(gco,'Tag'),'update')                     case 12            if h.invertHCH.Value==1               gf.InvertHardcopy='on';            else               gf.InvertHardcopy='off';            end      end %if linum         case 'lims'      xyzLims(1:2)=ga.XLim;      xyzLims(3:4)=ga.YLim;      xyzLims(5:6)=ga.ZLim;      newLim=str2double( h.xyLimH(c_num,axnum).String );      if (1)         xyzLims(c_num)=newLim(1,1);         if xyzLims(1)<xyzLims(2)            ga.XLim=xyzLims(1:2);         end         if xyzLims(3)<xyzLims(4)            ga.YLim=xyzLims(3:4);         end         if (xyzLims(5)<xyzLims(6))            ga.ZLim=xyzLims(5:6);         end      end         case 'colr'      colorval=h.aeColrH(axnum).Value;      color=whatcolor(colorval);            h.aeColrH(axnum).BackgroundColor=color.bg;      h.aeColrH(axnum).ForegroundColor=color.fg;            if c_num==0, what=gf;      else,        what=ga; end      what.Color=color.rgb;         case {'done','update','focusgained'}      curdir = pwd;      cd(matlabroot)      dErrFlag=0;      try    cd(findomprefs)      catch, dErrFlag=1;end      startXYPos=aeFig.Position;      aeStartXPos=startXYPos(1);      aeStartYPos=startXYPos(2);      aeStartYHgt=startXYPos(4);      if ~dErrFlag         save aePrefs.mat aeStartXPos aeStartYPos aeStartYHgt      end      cd(curdir)      close(aeFig)      % reopen editing window for new figure window      if any( strcmp(action,{'update','focusgained'}) )         axisedit      end            prevHotW=findHotW;end %switchend %function aEditAct