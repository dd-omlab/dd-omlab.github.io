% lEditAct.m: called by linedit to make the changes to line properties.% Written by: Jonathan Jacobs%             March 1997 - June 2019  (last mod: 06/03/19)function lEditAct(src, action)if nargin<2,linedit;return;endg=grapconsts;leFig = findme('lineEditingWindow');if ishandle(leFig)	h = leFig.UserData;else	disp('Cannot find the editing tool')   beep	returnend% control,axis numbers stored in Tagtag = str2num(src.Tag); %#ok<ST2NM>linum = tag(1);axnum = tag(2);if ~ishandle(h.gf)   disp('That figure is no longer available.')   disp('This is the current window.')   gf=findHotW;   figure(gf)end      if strcmp(action, 'delete')   try delete(h.leH(linum,axnum)); catch; end   % remove the controls for that row   try delete(h.edHiliteH(linum,axnum)); catch; end   try delete(h.edLColrH(linum,axnum)); catch; end   try delete(h.edLFColrH(linum,axnum)); catch; end   try delete(h.edLSEdgeH(linum,axnum)); catch; end   try delete(h.edLSFaceH(linum,axnum)); catch; end   try delete(h.edLWidH(linum,axnum)); catch; end   try delete(h.edLStylH(linum,axnum)); catch; end   try delete(h.edLMSzH(linum,axnum)); catch; end   try delete(h.edLSymbH(linum,axnum)); catch; end   try delete(h.edLMkFcClrH(linum,axnum)); catch; end   try delete(h.edLMkEdClrH(linum,axnum)); catch; end   try delete(h.edLDelH(linum,axnum)); catch; end   try delete(h.edEdgeAlphaH(linum,axnum)); catch; end   try delete(h.edFaceAlphaH(linum,axnum)); catch; end   try delete(h.yankH(linum,axnum)); catch; endelseif strcmp(action, 'mrkrSz')   newMkrSz = str2double(h.edLMSzH(linum,axnum).String);   if newMkrSz>0 && newMkrSz<=36      h.leH(linum,axnum).MarkerSize=newMkrSz;   end   elseif strcmp(action, 'hilite')   hilited = h.leH(linum,axnum).Selected;   butt=gco;   if strcmp(hilited,'on')      newSVal = 'off';      butt.BackgroundColor=[0.94 0.94 0.94];   else      newSVal = 'on';      butt.BackgroundColor='r';   end   h.leH(linum,axnum).Selected=newSVal;      elseif strcmp(action, 'datacopy')   % look at Offset/Gain portion of Eyeballs3D (xyplotsettings.m) to get code to   % create a window that lets you set various params.  ideally we'll give user   % the opportunity to decide the name of the variables created and whether   % to use entire data or just what's visible in the current view.   ga = h.leH(linum,axnum).Parent;   xlims=get(ga,'XLim');   xlow = xlims(1); xhigh=xlims(2);      temp = h.leH(linum,axnum).XData;   diff = abs(temp-xlow);   startpt = find( diff==min(diff) );   if isempty(startpt), startpt = 1; else, startpt=startpt(1);end      diff = abs(temp-xhigh);   stoppt = find( diff==min(diff) );   if isempty(stoppt), stoppt=length(temp); else, stoppt=stoppt(1);end      xdatafull = h.leH(linum,axnum).XData;   ydatafull = h.leH(linum,axnum).YData;   xdata = xdatafull(startpt:stoppt);   ydata = ydatafull(startpt:stoppt);      disp('Displayed X data saved as "xdata"; full X data saved as "xdatafull"')   disp('Displayed Y data saved as "xdata"; full Y data saved as "ydatafull"')   assignin('base','xdata',xdata)   assignin('base','ydata',ydata)   assignin('base','xdatafull',xdatafull)   assignin('base','ydatafull',ydatafull)   elseif strcmp(action, 'datamod')   % allow user to replace existing data or to modify it.   elseif strcmp(action, 'width')   newwid = str2double(h.edLWidH(linum,axnum).String);   if newwid>=0 && newwid<=10      h.leH(linum,axnum).LineWidth=newwid;   end   elseif strcmp(action, 'surf_face')   value = h.edLSFaceH(linum,axnum).Value;   h.edLSFaceH(linum,axnum).BackgroundColor='w';   h.edLSFaceH(linum,axnum).ForegroundColor='k';   if value == 1      h.leH(linum,axnum).FaceColor='none';   elseif value == 2      h.leH(linum,axnum).FaceColor='flat';   elseif value == 3      h.leH(linum,axnum).FaceColor='interp';   elseif value == 4      h.leH(linum,axnum).FaceColor='texturemap';   elseif value == 5      newSurf = uisetcolor;      %%%%      if length(newSurf) == 3         h.leH(linum,axnum).FaceColor=newSurf;         h.edLSFaceH(linum,axnum).BackgroundColor=newSurf;      end      %%%%   end   elseif strcmp(action, 'surf_edge')   value = h.edLSEdgeH(linum,axnum).Value;   h.edLSEdgeH(linum,axnum).BackgroundColor='w';   h.edLSEdgeH(linum,axnum).ForegroundColor='k';   if value == 1      h.leH(linum,axnum).EdgeColor='none';   elseif value == 2      h.leH(linum,axnum).EdgeColor='flat';   elseif value == 3      h.leH(linum,axnum).EdgeColor='interp';   elseif value == 4      newEdge = uisetcolor;      %%%%      if length(newEdge) == 3         h.leH(linum,axnum).EdgeColor=newEdge;         h.edLSEdgeH(linum,axnum).BackgroundColor=newEdge;      end      %%%%   end   elseif strcmp(action, 'alpha_face')   newval=str2double(get(gco,'String'));   if newval>1 || newval<0      set(gco,'String','1');   else      h.leH(linum,axnum).FaceAlpha=newval;   end   elseif strcmp(action, 'alpha_edge')   newval=str2double(get(gco,'String'));   if newval>1 || newval<0      set(gco,'String','1');   else      h.leH(linum,axnum).EdgeAlpha=newval;   end   elseif strcmp(action, 'style')   temp = h.edLStylH(linum,axnum).Value;   newstyle = ( (2*temp)-1:(2*temp) );   h.leH(linum,axnum).LineStyle=g.geStyles(newstyle);   elseif strcmp(action, 'symb')   newsymb = h.edLSymbH(linum,axnum).Value;   h.leH(linum,axnum).Marker=g.geSymbol(newsymb);      elseif strcmp(action, 'colr')   isLine = strcmp(h.leH(linum,axnum).Type, 'line');   colorval = h.edLColrH(linum,axnum).Value;   color = whatcolor(colorval);   if isempty(color),return;end      % change the object's color   if isLine, h.leH(linum,axnum).Color=color.rgb;   else,      h.leH(linum,axnum).EdgeColor=color.rgb;   end   % change the control's color   h.edLColrH(linum,axnum).ForegroundColor=color.fg;   h.edLColrH(linum,axnum).BackgroundColor=color.bg;   if colorval==g.OTHER      h.edLColrH(linum,axnum).String=color.colorlist;   end      elseif strcmp(action, 'fcolr')   colorval = h.edLFColrH(linum,axnum).Value;   color = whatcolor(colorval);   if isempty(color),return;end   % change the object's color   h.leH(linum,axnum).FaceColor=color.rgb;   % update the control's colors   h.edLFColrH(linum,axnum).ForegroundColor=color.fg;   h.edLFColrH(linum,axnum).BackgroundColor=color.bg;   if colorval==g.OTHER      h.edLFColrH(linum,axnum).String=color.colorlist;   end   elseif strcmp(action, 'mkfclr')   colorval = h.edLMkFcClrH(linum,axnum).Value;   color = whatcolor(colorval);   if isempty(color),return;end   % change the object's color   h.leH(linum,axnum).MarkerFaceColor=color.rgb;   % change the control's color   h.edLMkFcClrH(linum,axnum).ForegroundColor=color.fg;   h.edLMkFcClrH(linum,axnum).BackgroundColor=color.bg;   % if we selected a custom color, put its value in the popup colorlist   if colorval==g.OTHER	   	   h.edLMkFcClrH(linum,axnum).String=color.colorlist;   end   elseif strcmp(action, 'mkeclr')   colorval = h.edLMkEdClrH(linum,axnum).Value;   color = whatcolor(colorval);   if isempty(color),return;end   % change the object's color   h.leH(linum,axnum).MarkerEdgeColor=color.rgb;   % change the control's color   h.edLMkEdClrH(linum,axnum).ForegroundColor=color.fg;   h.edLMkEdClrH(linum,axnum).BackgroundColor=color.bg;   % if we selected a custom color, put its value in the popup colorlist   if colorval==g.OTHER      h.edLMkEdClrH(linum,axnum).String=color.colorlist;   end      elseif any(strcmp(action, {'done','refresh','focusgained'}))   curdir=pwd;   dErrFlag = 0;   cd(pathsafe(matlabroot))   try    cd(findomprefs)   catch, dErrFlag=1;end   startXYPos = leFig.Position;   leStartXPos = startXYPos(1);   leStartYPos = startXYPos(2);   leStartYHgt = startXYPos(4);   if ~dErrFlag      save le5Prefs.mat leStartXPos leStartYPos leStartYHgt   end   cd(pathsafe(curdir))   close(leFig)   if any( strcmp(action,{'refresh','focusgained'}) )      gf=findHotW;      figure(gf)      linedit   endend