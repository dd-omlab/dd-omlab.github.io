% rd_labv.m:  Read in 'labview' format files.  Multiple files can% be read in and their data will be stored in their own columns.% written by:  Jonathan Jacobs %              (coil code by Vallabh Das & Jeff Somers)%              March 1998 - January 2004  (last mod: 01/26/04)% 30 Jan 03: added line "clear newdata" to restore ability to load%            multiple datasets% 26 Jan 04: moved the reading and applying of bias file to 'applybias'% May 2018:  Modernized. Somewhat.%% 13 Apr 21: More informative error message if there is a channel mismatch.% 14 Apr 21: Reconcile mismatch in channel ORDER.%            Still throw error if missing channels.function data = rd_labv(pathname,filename,adjbiasvals)% Here's an interesting tidbit: LabVIEW writes data in% 'big-endian' format for BOTH Mac and DOS systems.fid = fopen([pathname filename], 'r', 'b');   % big-endian% In old format, 1st 20 chars are filename that contains coil cal vals% but in our format the 1st 40 chars contain the LV scale valsf1 = fread(fid,20,'uchar');f1str = char(f1');% Read channels, samp_freq, comments from existing header.range = 100; % default valuetemp=strtok(f1str,':\');  %% f1str contains the file name, thereforeif length(temp)==1        %% the file is from the coil system   %disp('their header')   theirlvhdrelse   %disp('our header')   ourlvhdr  %%% THIS IS A SCRIPT, not a function!   % ___lvhdr creates:   % samp_freq, hdr_chanstr, commentsend% Load the data arrays: Jump to the END of the file and rewind it% to the beginning of the data since we know how many points to expect.% (The '*2' is because 'short' is 16 bits or 2 bytes)chan_count = length(strfind(hdr_chanstr,','))+1; %%#ok<NODEF> created by ourlvhdrfseek(fid, -chan_count*points*2, 'eof');[in_arr,~] = fread(fid,[chan_count,inf],'short');in_arr = in_arr';fclose(fid);% Reconcile file header channels and adjbias channelschHdrs=split(hdr_chanstr,',');chBias=adjbiasvals.chName;chnums=NaN(chan_count,1);% Do the channel names in the file header match the channel names% in the adjbias file? (Allowed to be out of order.)missing=0;ooo=0;  % out of orderfor jj=1:chan_count   % find chnlstr in chName   temp = strfind(chHdrs, chBias{jj});   temp = ~cellfun(@isempty,temp);   temp = find(temp==1);      if isempty(temp)    % chan NOT found      missing=missing+1;   else                % chan found      if temp~=jj         % order mismatch.         ooo=ooo+1;      else         chnums(jj)=temp;  % map between hdr and adjbias chans      end   endendif missing>=1   errstr=sprintf(['Unequal # of LabView file header and biasfile channels!' ...     '\n']);   keyboard   error(errstr)end   if ooo>=1   errstr=sprintf(['Out of order LabView file header vs biasfile channels!' ...     '\n']);   keyboard   error(errstr)end   % Multiply by calibration factornewdata = NaN(length(in_arr), chan_count);if vers == 1.1   % do our simple en masse scaling   % the '300' applies IF the LabVIEW Channel Wizard   % is set up with  scaling: x30   scarr = in_arr * (300/65536);     %convert to degs   newdata = scarr;   elseif vers >= 1.2   for jj = 1:chan_count      newdata(:,jj) = in_arr(:,jj) * (scaleval(jj)*10)/65536;   end   else   % version 1.0, (i.e. taken w/ the coil system)   % convert to degs   % do individual calibrations   scarr = in_arr * (range/65536);     %'range' comes from 'theirlvhdr.m'   % apply the calibration   for k = 1:chan_count      newdata(:,k) = scarr(:,k) .* calib(k);   endend% creating a time array%t = (0:points-1)/samp_freq; t = t';% 'comments' was created by script 'ourlvhdr'commentstr = comments(end,:);  %#ok<USENS>hdr_chanstr2 = hdr_chanstr;hdr_chanstr2(strfind(hdr_chanstr2,',')) = ' '; % replace commas w/spaces[dat_len, ~] = size(newdata);if ~strcmpi(deblank(vpixx_stim),'no.vpx')   disp( ['VPixx stim:         ' vpixx_stim] );endif ~strcmpi(deblank(verge_stim),'no.vrg')   disp( ['vergence stim:      ' verge_stim] );enddisp( ['Channels found:     ' hdr_chanstr2] );disp( ['Comments:           ' commentstr] );disp( ['Samples found:      ' num2str(dat_len)] );disp( ['Sampling frequency: ' num2str(samp_freq) 'Hz'] );disp( ['Record duration:    ' num2str(dat_len/samp_freq) ' seconds'] );data.newdata   = newdata;data.samp_freq = samp_freq;data.comments  = commentstr;data.chnums    = chnums;% return to RDend %function rd_labv%%%%{while ~all(isspace(chnlstr))   %[tempch{ii},chnlstr]=strtok(chnlstr,','); %%#ok<STTOK>   %tempch{ii}=deblank(tempch);   chName{ii}=char(adjbiasvals.chName{ii});   %hdrChanName{i}=char(temp);   %if ~strcmp(char(temp),chName{ii})   %   errstr=sprintf(['Header channels do not match biasfile channels!' ...   %     'Check the order of channels listed in the bias file.\n']);   %   error(errstr)   %end   ii=ii+1;endif ii-1 ~= chan_count   errstr=sprintf(['Unequal # of header channels and biasfile channels!' ...     '\n']);   keyboard   error(errstr)end%}