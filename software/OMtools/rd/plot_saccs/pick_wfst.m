% pick_wfst.m: select what saccade type/wave form combo's scps to use.% called by find_scp if there is more than one scp set.% Written by Jonathan Jacobs% June 1996 - May 1997  (last mod: 05/20/97)% We pass through the lists ('count' elements long) of saccade types % and waveforms picking out each unique combo (eg 'B' and 'PPfs') and keep % track of all other entries that match it in 'matchArray'.  These additional % entries will be the scp lists for other data channels. [comp, maxsize] = computer;if strcmp(comp(1), 'M')   %BS = setstr(8);   BS = ''; else   BS = '';endleftToCheck = ones(1,count);target = ['?????   ?????????????'];matchArray = [];wfst = 1;                      % start with first wf,st pairi = 1;while i <= count   % make sure it's an uncatalogued entry.  If not, advance to next entry.   while leftToCheck(i) == 0      i = i+1;   end      % It's now our target.  Mark it as catalogued   % and then do a loop (j) to see what matches it   leftToCheck(i) = 0;   target(wfst,:) = upper( [w_form(i,1:5) blanks(3) s_type(i,1:13)] );   matchArray(wfst,1) = i;   match = 0;   j = i+1;   while j <= count      % make sure it's an uncataloged entry      while leftToCheck(j) == 0         j = j+1;      end      % look for entries that match the target      numMatch = 1;      compare = upper( [w_form(j,:) '   ' s_type(j,:)] );      match   = strcmp( target(wfst,:), compare );      if match         numMatch = numMatch + 1;         matchArray(wfst, numMatch) = j;         leftToCheck(j) = 0;      end      j = j+1;   end %while j   % on to the next unique wf,st pair   wfst = wfst+1;   i = i+1;end %while i% if there is only one set, then we automatically load it.% otherwise we will list all the st,wf combos and prompt the% user to select the desired set.if wfst-1 == 1   whichSet = 1;   disp( ['  loading ' target] ) else   % prompt the user for the set to load   for k = 1:wfst-1      disp(['    ' num2str(k) '  ' target(k,:)]);   end   whichSet = 0;   while( (whichSet<1) | (whichSet>wfst-1) )       whichSet = input( [BS '   Which set do you want? ']);      if isempty(whichSet), whichSet = 0; end   endend