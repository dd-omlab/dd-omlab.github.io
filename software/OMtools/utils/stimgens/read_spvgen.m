% read_spvgen: Called by sp_vidgen to read stimuli files used to create% point-by-point vectors of smooth pursuit targets.%% Written by:  Jonathan Jacobs%              last mod:  03/02/21)%% lin	 vel x0 y0 xr yr color% sin  dur x0 y0 xr yr afreq color% circ dur x0 y0 xr yr afreq angle color rotation (-/+ cw/ccw)function  target = read_spvgen(vsgenfile)if ~exist('vsgenfile','var')   [fn,pn]=uigetfile('*.txt');   vsgenfile=[pn fn];   if fn==0,return;endendfid = fopen(vsgenfile);in_text = fread(fid,'*char')';fclose(fid);count = 0;isEOF = 0;target = cell(1,100);while ~isEOF   % read in the next non-empty line   emptyLine = 1;   while(emptyLine)      [topline, in_text, emptyLine, isEOF] = getnextl(in_text);      if isEOF,return,end    %disp('EOF reached')   end   count=count+1;   tgt_line = proclinec(topline);      % put values into appropriate structure for stim type   t_type = tgt_line{1};   target{count}.t_type = t_type;   x0 = str2double(tgt_line{3});  % tgt start pos x   y0 = str2double(tgt_line{4});  %  y   xr = str2double(tgt_line{5});  % tgt x dist (r or endpt)   yr = str2double(tgt_line{6});  %  y   target{count}.x0 = x0;   target{count}.xr = xr;   target{count}.y0 = y0;   target{count}.yr = yr;      switch t_type      case {'circ','sin'}         % duration will be limited to multiples of 50 msec (20 Hz)         % if EB computer is fast enough, could switch to 20 ms, 50 Hz.         temp = str2double(tgt_line{2});         fiftysafe = fix(temp/0.05)*0.05;         if fiftysafe ~= temp            fprintf('%d sec rounded to nearest 50 msec: %d\n',temp,fiftysafe);         end         target{count}.dur = fiftysafe;                  if length(tgt_line)>6            target{count}.afreq = str2double(tgt_line{7});            if strcmpi(t_type,'circ')               target{count}.color = tgt_line{8};               target{count}.rot = str2double(tgt_line{9});               %target{count}.angle = tgt_line{10};            else               target{count}.color = tgt_line{8};            end         else            fprintf('read_spgen: not enough args for %s in line# %d\n',t_type,count);            keyboard         end               case 'lin'         % duration is determined by x0,y0 xr,yr and vel.         if length(tgt_line)>6            target{count}.vel = str2double(tgt_line{2});            target{count}.color = tgt_line{7};            r = sqrt((x0-xr)^2 + (y0-yr)^2);            target{count}.dur = r/target{count}.vel;         else            fprintf('read_spgen: not enough args for %s in line# %d\n',t_type,count);            keyboard         end   end %switch      % lose the empty cells   target = target(1:count);   end % while ~isEOF