% strip away the comments, i.e. any text following any of % these characters: ! @ # $ % ^ & *% usage: out=stripcom(in);% unfortunately 'strtok' can't deal with a hit on the first% character, so we use the 'abs' to check for those characters% Written by:  Jonathan Jacobs%              July 1997  (last mod:  07/22/97)function out = stripcom(in)if nargin == 0,   help stripcom;   returnendif isempty(in), out=[]; return; end% properly functioning 'strtok' seems to make this unnecessary% 'firstChar' is the first non-whitespace character%goodList = find(~isspace(in));%firstChar = in(goodList(1));%secondChar = in(goodList(2));% if the first 'good' char is a comment delimiting% character, the whole line is a comment, and we are done.% a properly working version of strtok.m seems to obviate the need% for these four lines%if abs(firstChar) <= 42%   out = '';%   return%end% but is this needed to check for the double-slash '//'% -- with strtok or strtok2, '/' is also seen as a comment character% -- when '//' is, too.  can't properly handle any double chars?   %if ( abs(firstChar)==47 & abs(secondChar)==47 ),%   out = '';%   return%end% 'out' is everything up to the first comment delimiting character[out, null] = strtok2(in,['!' '@' '#' '$' '%' '^' '&' '*']);% use these lines to return an empty array if 'out' is only white space.if all(isspace(out))   out = [];end