% regress.m: Given x and y vectors, calculate the slope and % intercept for the line of best fit.  Also calculate the standard% deviations of said slope and intercept.% Example call:%    [slope, inter, r_sqr, sd_slope, sd_inter] = regress( x, y, doplot )%% A value of 0 (zero) for 'doplot' will suppress graphic output.% Written by: Jonathan Jacobs%             May 1996  (last mod: 05/07/96)% This code comes from the SigmaPlot "Transforms and Curve Fittings"% manual, pages 6-40, 6-41 and from pages 6-34, 6-35function [slope, inter, r_sqr, sd_slope, sd_inter] = regress( x, y, doplot )[xrows, xcols]  = size( x );[yrows, ycols]  = size( y );if xcols == 1    % we'll make it a row vector x = x';endif ycols == 1    % we'll make it a row vector y = y';endlen = length(x);mx = mean(x);my = mean(y);sumxx = sum(x .* x);sumyy = sum(y .* y);sumxy = sum(x .* y);slope = (sumxy-len*mx*my)/(sumxx-len*mx*mx);inter = my - slope*mx;if len < 2   sregxy = 0; else   sregxy = sqrt(abs((sumyy-len*slope*my-inter*sumxy)/(len-2)));endsd_slope = sregxy*sqrt(abs(sumxx/(len*(sumxx-len*mx*mx))));sd_inter = sregxy/sqrt(abs(sumxx-len*mx*mx));xmin = min(x);xmax = max(x);% step = (xmax - xmin)/(len-1);% x_vect = (xmin:step:xmax);x_vect = x;yfit = slope*x_vect + inter;ydiff = yfit - y;ydisp = y - my;r_sqr = 1.0 - sum(ydiff.^2)/sum(ydisp.^2);rsq2  = rsqr(y,yfit);if nargin == 3   if doplot == 0 return; endend% now for the plotting.% if there is an existing plot... % should we do a hold and plot the fit on top of it?nsacStr   = [num2str(len) ' saccades. '];  rtitleStr = [' r^2 = ' num2str(r_sqr)];y_or_n = [];if ~isempty(get(gca,'child'))  % there is a current plot   y_or_n = input('Plot fitted line on top of current graph (y/n)? ','s');   y_or_n = lower(y_or_n(1));   if y_or_n == 'y'      hold on      plot(x_vect, yfit, 'c')      oldtitleH = get(gca,'title');      oldtitleStr = get(oldtitleH, 'str');      if length(oldtitleStr) >= 5  % there is an old title         mod = input('Append r^2 value to existing title? ','s');         mod = lower(mod);         if mod(1) == 'y'  % let's add to the old title            title( [oldtitleStr '   ' rtitleStr] )         end       else % there wasn't an old title         title([nsacStr rtitleStr])      end    else      % we don't wish to over plot so we'll let      figure   % the next 'if' block do the plotting   endend% otherwise, we simply create a new figure and plot in it.if isempty(get(gca,'child')) | y_or_n == 'n';   plot(x,y,'.');   hold on   plot(x_vect,yfit,'c')   title([nsacStr rtitleStr])enddisp(['Slope: ' num2str(slope)]) disp(['Intercept: ' num2str(inter)])disp(['R^2: ' num2str(r_sqr)]) 