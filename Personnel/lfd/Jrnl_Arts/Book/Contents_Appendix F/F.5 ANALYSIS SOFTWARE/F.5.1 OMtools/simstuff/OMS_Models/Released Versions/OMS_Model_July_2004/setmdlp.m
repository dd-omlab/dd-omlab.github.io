% setmdlp.m: GUI to display/change the programatically settable% parameters for the CN/LMLN model.% USAGE: setmdlp  (this is not a function, therefore you can not call it with arguments)% % NOTE: if you make a variable 'create' with a zon-zero value, then 'setmdlp'% will prompt you to create a new parameter set.%% See also SHOWTPS and LOADMDLP% written by:  Jonathan Jacobs%              December 1999 - January 2000 (last mod:  01/08/99)mdlparamwind = findme('MdlParamWindow');if mdlparamwind > 0   figure(mdlparamwind)   returnend% define some standard settingscndefaultlist =   [3.025   35     40   0.0001     1.0 ...    % 1 - 5                     5.0  1.0    50.0    0.95   -0.03 ...    % 6 - 10                       0    1      1        1      60 ...    % 11 - 15                       1    1      7       40       0 ...    % 16 - 20                       0    0      0        0       0];      % 21 - 25lmlndefaultlist = [  1.1   35     30   0.0001     1.0 ...    % 1 - 5                     5.0  1.0   50.0     0.95   -0.03 ...    % 6 - 10                       0    1      0        1      60 ...    % 11 - 15                       0    1      7       40       0 ...    % 16 - 20                       0    0      0        0       0];      % 21 - 25normdefaultlist = [  1.1   35     30   0.0000     1.0 ...    % 1 - 5                     5.0  1.0   50.0     0.95   -0.03 ...    % 6 - 10                       0    1      0        1      60 ...    % 11 - 15                       0    1      7       40       0 ...    % 16 - 20                       0    0      0        0       0];      % 21 - 25mdlNameDefault = 'testbed';paramSetNameDefault = 'unknown';% Variable description stringsenvStr( 1,:) = 'PMC Gain          ';  x_pos( 1) = 5;    y_pos( 1) = 285;envStr( 2,:) = 'PMC tau2 (ms)     ';  x_pos( 2) = 5;    y_pos( 2) = 260;envStr( 3,:) = 'PMC tau3 (ms)     ';  x_pos( 3) = 5;    y_pos( 3) = 235;envStr( 4,:) = 'Vel. noise        ';  x_pos( 4) = 5;    y_pos( 4) = 210;envStr( 5,:) = 'CNS Gain          ';  x_pos( 5) = 5;    y_pos( 5) = 185;envStr( 6,:) = 'Tonic Gain        ';  x_pos( 6) = 5;    y_pos( 6) = 160;envStr( 7,:) = 'Phasic Gain       ';  x_pos( 7) = 5;    y_pos( 7) = 135;envStr( 8,:) = 'Sacc Refract (ms) ';  x_pos( 8) = 5;    y_pos( 8) = 110;envStr( 9,:) = 'SP Gain           ';  x_pos( 9) = 5;    y_pos( 9) = 85;envStr(10,:) = 'Alexander''s Law   '; x_pos(10) = 5;    y_pos(10) = 60;envStr(11,:) = 'Vel Recon. LP Filt';  x_pos(11) = 5;    y_pos(11) = 35;envStr(12,:) = 'Light(1)/Dark(0)  ';  x_pos(12) = 175;  y_pos(12) = 285;envStr(13,:) = 'FS On/Off         ';  x_pos(13) = 175;  y_pos(13) = 260;envStr(14,:) = 'FS Scale          ';  x_pos(14) = 175;  y_pos(14) = 235;envStr(15,:) = 'FS Delay Calc (ms)';  x_pos(15) = 175;  y_pos(15) = 210;envStr(16,:) = 'BS On/Off         ';  x_pos(16) = 175;  y_pos(16) = 185;envStr(17,:) = 'BS Scale          ';  x_pos(17) = 175;  y_pos(17) = 160;envStr(18,:) = 'BS/FS Vel crit    ';  x_pos(18) = 175;  y_pos(18) = 135;envStr(19,:) = 'BS/FS Acc crit    ';  x_pos(19) = 175;  y_pos(19) = 110;envStr(20,:) = 'Vol Sacc On/Off   ';  x_pos(20) = 175;  y_pos(20) = 85;[numVars, null] = size(envStr);LASTPLACE = numVars + 1;x_pos(LASTPLACE)=175; y_pos(LASTPLACE)=35;% attempt to load the last settingsfail = 0;saved = 0;cd(matlabroot);cd('omPrefs')eval(['load mdlparams.mat'],['fail=1;'])% stick some zeros on the end of the list to allow for the addition of more params% at a later date while still letting us read old parameter settings filesif ~fail   mdlparamlist = [mdlparamlist, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];   mdlparamlist = mdlparamlist(1:numVars);end% do the varialbles exist?if ~exist('lastsave'),     lastsave = ''; endif ~exist('lastload'),     lastload = ''; endif ~exist('mdlname'),      mdlname  = ''; endif ~exist('paramsetname'), paramsetname = paramSetNameDefault; endif ~exist('create'),       create   = 0;  endif ~exist('saved'),        saved    = 0;  endif ~(exist(mdlname)==4),   mdlname = mdlNameDefault; end% are the directory variables good?if ~exist(lastsave,'dir'), lastsave = ''; endif ~exist(lastload,'dir'), lastload = ''; endif isempty(lastsave), omdir; lastsave = pwd; endif isempty(lastload), omdir; lastload = pwd; end%if ~(exist(paramsetname)==2), paramsetname = paramSetNameDefault; endif fail | create   disp('Last settings not found.')   choice1 = lower(input('(L)oad existing set or (C)reate new set? ','s'));   if choice1 == 'l'      [fn,pn] = uigetfile('Load an existing model parameter file:', '*.mat');      eval(['cd ' '''' pn ''''])      eval(['load ' fn],[';'])      lastload = pn;     else	   choice = input('Create using (N)ormal, (C)N or (L)MLN parameters? ','s');	   choice = lower(choice);	   if choice == 'c'	      mdlparamlist = cndefaultlist(1:numVars);	      paramsetname = 'CN Default'; 	    elseif choice == 'l'	      mdlparamlist = lmlndefaultlist(1:numVars);	      paramsetname = 'LMLN Default'; 	    else	      mdlparamlist = normdefaultlist(1:numVars);	      paramsetname = 'Normal Default'; 	   end	end   cd(matlabroot)   cd('omPrefs')   save mdlParams.mat mdlparamlist lastsave lastload mdlname paramsetname saved	 else   %disp('Loading last parameter set')end%%% last sanity checkif length(mdlparamlist)<numVars   disp('Some parameters are missing: load a new set!')end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% set up the uifig_width = 330;%fig_height = (25*numVars) + 40;fig_height = 320;startXPos = 20;startYPos = (480 - fig_height)/2;mdlparamWinH = figure(999999);set(mdlparamWinH,'pos',[startXPos, startYPos, fig_width, fig_height],...       'Resize', 'off', 'Name', ['Model Params: ' paramsetname],...       'NumberTitle', 'off', 'NextPlot', 'new',...       'MenuBar', 'none',...       'Tag', 'MdlParamWindow');if ~saved   titlestr = get(mdlparamWinH,'Name');   set(mdlparamWinH,'Name', ['¥' titlestr]);endfor j = 1:numVars   uicontrol('Style', 'text', 'Units', 'pixels',...      'Position',[x_pos(j) y_pos(j) 100 20],...        'String', envStr(j,:) )         varH(j) = uicontrol('Style','edit','Units','pixels',...      'BackgroundColor','magenta','ForeGroundColor','white',...      'Position',[x_pos(j)+100 y_pos(j) 50 20],...      'String',num2str(mdlparamlist(j)),...      'UserData',j,'Tag', '',...      'Callback',[...             'which=get(gco,''UserData'');',...             'newVal = str2num(get(varH(which), ''String''));',...             'titlestr = get(mdlparamWinH,''Name'');',...             'if titlestr(1) ~= ''¥'',',...                'saved = 0;',...                'set(mdlparamWinH,''Name'', [''¥'' titlestr]);',...             'end,',...               'mdlparamlist(which) = newVal;',...             ]);end%%%    'keyboard;',...% set up the UI buttonssaveH = uicontrol('Style','push','Units','pixels',...    'Position',[5 5 55 20],...    'String','Save as...',...    'UserData','','Tag','',...    'Callback',[...             'eval([''cd '' ''''''''lastsave '''''''' ]); ',...             '[fn,pn]=uiputfile; ',...             'if fn == 0, break; end;',...             'lastsave = pn;',...             'paramsetname = fn;',...             'set(mdlparamWinH,''Name'',[''Model Params: '' paramsetname]);',...             'cd(matlabroot); cd(''omPrefs'');',...             'saved=1;',...               'save mdlparams.mat mdlparamlist lastsave lastload mdlname paramsetname saved;',...             'eval([''cd '' '''''''' pn '''''''' ]); ',...   %%wow! eight             'eval([''save '' fn '' mdlparamlist lastsave lastload mdlname paramsetname saved'']); ',...             'titlestr = get(mdlparamWinH,''Name'');',...             'if titlestr(1) == ''¥'',',...                'set(mdlparamWinH,''Name'', [titlestr(2:end)]);',...             'end,',...               'saved=0;',...              ]);loadH = uicontrol('Style','push','Units','pixels',...    'Position',[70 5 55 20],...    'String','Load...',...    'UserData','','Tag','',...    'Callback',[...             'eval([''cd '' ''''''''lastload '''''''' ]); ',...             '[fn,pn]=uigetfile(''*.mat''); ',...             'if fn == 0, break; end;',...             'newlastload = pn;',...             'eval([''load '' ''''''''pn fn '''''''' ]); ',...             'cd(matlabroot); cd(''omPrefs'');',...             'paramsetname = fn;',...             'lastload = newlastload;',...             'save mdlparams.mat mdlparamlist lastsave lastload mdlname paramsetname saved;',...             'close(mdlparamWinH);',...             'setmdlp;',...             ]);applyH = uicontrol('Style','push','Units','pixels',...    'Position',[135 5 55 20],...    'String','Apply',...    'UserData','','Tag','',...    'Callback',[...                'cd(matlabroot); cd(''omPrefs'');',...                'save mdlParams.mat  mdlparamlist lastsave lastload mdlname paramsetname saved;',...                ]);doneH = uicontrol('Style','push','Units','pixels',...    'Position',[200 5 55 20],...    'String','Done',...    'UserData','','Tag','',...    'Callback',[...                'cd(matlabroot); cd(''omPrefs'');',...                'save mdlParams.mat mdlparamlist lastsave lastload mdlname paramsetname saved;',...                'close(mdlparamWinH);',...                'clear which envStr doneH varH mdlparamWinH;',...                'clear fig_width fig_height startXPos startYPos;',...                'clear numVars y_pos x_pos j newVal mdlparamlist;',...                'clear cndefaultlist lmlndefaultlist normdefaultlist;',...                'clear applyH loadH cancelH null fail saveH runH;',...                'clear lastsave lastload mdlname newlastload fn pn;',...                'clear choice choice1 mdlNameDefault mdlparamwind create;',...                'clear paramSetNameDefault paramsetname saved;',...                'clear LASTPLACE mdlNameH titlestr;',...                ]);cancelH = uicontrol('Style','push','Units','pixels',...    'Position',[265 5 55 20],...    'String','Cancel',...    'UserData','','Tag','',...    'Callback',[...                'close(mdlparamWinH);',...                'clear which envStr doneH varH mdlparamWinH;',...                'clear fig_width fig_height startXPos startYPos;',...                'clear numVars y_pos x_pos j newVal mdlparamlist;',...                'clear cndefaultlist lmlndefaultlist normdefaultlist;',...                'clear applyH loadH cancelH null fail saveH runH;',...                'clear lastsave lastload mdlname newlastload fn pn;',...                'clear choice choice1 mdlNameDefault mdlparamwind create;',...                'clear paramSetNameDefault paramsetname saved;',...                'clear LASTPLACE mdlNameH titlestr;',...                ]);                % wouldn't it be neat to have a button to run the model?uicontrol('Style', 'text', 'Units', 'pixels',...   'Position',[x_pos(LASTPLACE) y_pos(LASTPLACE) 90 20],...     'String', 'Model: ', 'HorizontalAlignment','Right' )      mdlNameH = uicontrol('Style','edit','Units','pixels',...   'BackgroundColor','magenta','ForeGroundColor','white',...   'Position',[x_pos(LASTPLACE)+90 y_pos(LASTPLACE) 60 20],...   'String',mdlname,...   'UserData',LASTPLACE,'Tag', '',...   'Callback',[...          'which=get(gco,''UserData'');',...          'mdlname = (get(varH(LASTPLACE), ''String''));',...          ]);runH = uicontrol('Style','push','Units','pixels',...   'Position',[x_pos(LASTPLACE)+1 y_pos(LASTPLACE)+1 45 18],...   'BackgroundColor','red','ForeGroundColor','white',...   'String','Run',...   'UserData',LASTPLACE,'Tag', '',...   'Callback',[...          'eval([''sim( mdlname )'']);',...          ]);