% loadmdlp.m satisfies two purposes% 1) to make the new GUI compatible with the OMS Model without needing to% redefine every individual instance of each variable in every block%   ***NOTE sometimes variables are defined by mdlparamlist in the model%   and sometimes by thier name.  This is why I had to redefine them the%   way I did% 2) to allow one-off per-item behaviors for inter-related variable%   FOR EXAMPLE  to set Alex_Law_L equal to Alex_Law Right if the symetry%   switch is onglobal current  %if current is already made by gui we can grab itif isempty(current)    loadin = load('guisettings.mat','def_set');    current=loadin.def_set; %otherwise this means no gui data open so use a defaultendvariablesym=fieldnames(current);for v=1:numel(variablesym)    namevar=variablesym{v};    if ~strcmp(namevar,'settings') %dont want to use the def_set.settings as a variable    if isempty(current.(namevar))        current.(namevar)='0';    end    if ~ischar(current.(namevar))        current.(namevar)=num2str(current.(namevar));    end    eval([namevar ' = [' (current.(namevar)) '];']);    endend%test for waveform overridesif Overide_Wave_Set    switch NZ_Waveform        case 1            Fs_Switch=1;            Fs_Scale=1;            Bs_Switch=0;        case 2            Fs_Switch=1;            Fs_Scale=1.1;            Bs_Switch=1;        case 3            Fs_Switch=1;            Bs_Switch=1;            Fs_Scale=1;    endend%account for old variable namesmdlparamlist(1)=PMC_Gain;pmcgain  = mdlparamlist(1);mdlparamlist(2)=PMC_Tau_2;pmctau2  = mdlparamlist(2);mdlparamlist(3)=PMC_Tau_3;pmctau3  = mdlparamlist(3);mdlparamlist(4)=Vel_Noise;velnoise = mdlparamlist(4);mdlparamlist(5)=CNS_Gain;cnsgain     = mdlparamlist(5);mdlparamlist(6)=Tonic_Gain;tonicgain   = mdlparamlist(6);mdlparamlist(7)=Phasic_Gain;phasicgain  = mdlparamlist(7);mdlparamlist(8)=Sacc_Refract;saccrefract = mdlparamlist(8);mdlparamlist(9)=SP_Gain;spgain      = mdlparamlist(9);if Fix_Eye==1    mdlparamlist(10)=Alex_Law_RE;elseif Fix_Eye==2    mdlparamlist(10)=Alex_Law_LE;endalexlaw     = mdlparamlist(10);mdlparamlist(11)=Vel_Recon_SW;velreconsw  = mdlparamlist(11);mdlparamlist(12)=Lt_Drk;ltdrk       = mdlparamlist(12);mdlparamlist(13)=Fs_Switch;fs_onoff    = mdlparamlist(13);mdlparamlist(14)=Fs_Scale;fs_scale    = mdlparamlist(14);mdlparamlist(15)=Fs_Delay_Calc;fsdelaycalc = mdlparamlist(15);mdlparamlist(16)=Bs_Switch;bs_onoff    = mdlparamlist(16);mdlparamlist(17)=BS_Scale;bs_scale    = mdlparamlist(17);mdlparamlist(18)=BSFS_V_Crit;bsfsvcrit   = mdlparamlist(18);mdlparamlist(19)=BSFS_A_Crit;bsfsacrit   = mdlparamlist(19);mdlparamlist(20)=Vol_Sacc_switch;saccsw      = mdlparamlist(20);mdlparamlist(21)=Reset;mdlparamlist(22)=PMC_Init;mdlparamlist(23)=Reset_IC;Attention_Level=-1*Attention_Level; %GAH!!!!!! WHY!!!!!!!!1 :(mdlparamlist(24)=Attention_Level;mdlparamlist(25)=Tentomy_Effect;mdlparamlist(26)=G_Angle_Variation;if ~A_Law_Asym    Null_AL_L=Null_AL_R;endif mdlparamlist(11) == 0   tvrN = 1;   tvrD = 0; else   tvrN = mdlparamlist(11);   tvrD = 1;end