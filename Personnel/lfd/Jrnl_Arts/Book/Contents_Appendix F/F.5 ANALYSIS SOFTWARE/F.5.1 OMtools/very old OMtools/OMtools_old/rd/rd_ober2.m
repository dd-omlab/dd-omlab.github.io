% rd_ober2.m:  called by RD to handle ober2 data files% written by:  Jonathan Jacobs%              September 1995 - March 2000  (last mod: 03/15/00)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% open the ober fileif comp(1) == 'M'   fid = fopen( filename, 'r', 'l'); else   fid = fopen( filename, 'r' );endo_files = o_files + 1;total_files = r_files + a_files + b_files...                   + o_files + x_files + l_files;% read the # of channelsfseek(fid, 370, 'bof');[numChans, count] = fread(fid, 1, 'int8');% get the channel names.  They are ASCII strings located at % offsets 436, 456, 476 and 496, as "XL XR YL YR" for "lh rh lv rv"chanName = [];for i = 1:numChans   fseek(fid, 436+((i-1)*20), 'bof');   [temp, count] = fread(fid, 1, 'uchar');   if setstr(temp) == 'X'      chanName(i,2) = 'h';     elseif setstr(temp) == 'Y'      chanName(i,2) = 'v';   end   [temp, count] = fread(fid, 1, 'uchar');   chanName(i,1) = lower(setstr(temp));   end% load the sampling frequency% the high four bits of this number are '1001', indicating that% this is the sampling frequency.  We must mask them out.fseek(fid, 5200, 'bof');[codedSampFreq, count] = fread(fid, 1, 'ushort');tempSampFreq = codedSampFreq - (4096*9); % load the datafseek(fid, 5210, 'bof');[tempdata, count] = fread(fid, inf, 'short');fclose(fid);% filter out the marker (?) crap (high four bits not all zero)% and then convert the data vector of size (count) x (1)% into array of size (numSamples) x (numChans)areDataPts = find( (tempdata >= 0) & (tempdata <= 4095) );data = tempdata(areDataPts);numSamples = length(data)/numChans;newdata = [];for k = 1:numChans   newdata(:,k) = data((0:numSamples-1)*numChans + k);end[dat_len, dat_cols] = size( newdata );disp( ['  Channels found:     ' num2str(dat_cols)] );disp( ['  Samples found:      ' num2str(dat_len)] );disp( ['  Sampling frequency: ' num2str(tempSampFreq)] );disp( ['  Duration of record: ' num2str(dat_len/tempSampFreq) ' seconds'] );%%% now that we have the data loaded, we will read and apply the adjust bias%%% file, if it exists.  If it doesn't we will prompt the user to enter %%% all the information by hand.getbiasapplybias