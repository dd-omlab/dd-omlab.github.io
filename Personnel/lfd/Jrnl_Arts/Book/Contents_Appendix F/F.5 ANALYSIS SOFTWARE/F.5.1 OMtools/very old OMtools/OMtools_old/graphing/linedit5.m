% linedit.m:   change/delete line properties in a figure% Written by:  Jonathan Jacobs%              March 1997 - February 2006  (last mod: 02/16/06)function linedit5(gf)if isempty(get(0,'Child'))   disp('Nothing to edit, slick.')   returnendif nargin == 0   gf = findHotW;   if gf == -1;      disp('No valid plot window found.  Possible reasons:')      disp(' * You don''t have a figure window open.')      disp(' * You are trying to edit a Zoomtool window.')      disp(' * I am having a nervous breakdown.')      return   endendisMac=0; isHose=0;comp = computer;ver=version;if lower(comp(1)) == 'm'   isMac=1;   if ver(1)>=6      newLine = [10];    else        newLine = [13];   end    else   isHose=1;   %newLine = [13 10];   newLine = [13];endif strcmp( get(gf,'Tag'), 'EditingWindow')   disp( 'Bring a graph window to the front and try again.')   returnend% check if the line editing window is already open% if it is, bring it to the frontwNum = findme('lineEditingWindow');if wNum > -1   figure(wNum)   returnendscrsize = get(0,'Screensize');mBarHgt = 35;maxHgt = scrsize(4)-mBarHgt;maxWid = scrsize(3);% this little bit of fun is needed because not every child in the figure is an axis.ch = get(gf,'Children');numCh = length(ch);if numCh == 0   disp('Nothing to edit, slick.')   returnendcount = 0;for i = 1:numCh   if strcmp(lower(get(ch(i),'type')),'axes')      count = count + 1;      tempga(count) = ch(i);      axpos(count,:) = get(tempga(count),'Position');   endendif ~count, disp('No axes found. Quitting.'); return; end% howzabout a rudimentary sorting from top to bottom% and from left to right, in case we've got m x n axes?tempXY = axpos(:,1:2);[dummy,ind] = sort(tempXY(:,1));ind = flipud(ind);tempXY = tempXY(ind,:);tempga = tempga(ind);[dummy,ind] = sort(tempXY(:,2));ind = flipud(ind);tempXY = tempXY(ind,:);ga = tempga(ind);numAxes = length(ga);tmpColrStr = blanks(13);leStyles   = ['- ',': ','-.','--','no'];leStyleStr = ['solid|dotted|dashdot|dashed|none'];leSymbol   = ['.','o','x','+','*','s','d','v','^','<','>','p','h','n'];leSymbStr  = ['point|circle|x-mark|plus|star|square|diamond|'...              'triangle (d)|triangle (u)|triangle (l)|triangle (r)|'...              'pentagram|hexagram|none'];leColors   = ['k','b','g','c','r','m','y','w','?','*','@','#','$','a','n'];leColorStr = ['black        ';'blue         ';'green        ';...	           'cyan         ';'red          ';'magenta      ';...	           'yellow       ';'white        ';'orange       ';...	           'dk. orange   ';'lt. gray     ';'dk. gray     ';...	           'other...     '];leMkClrStr = ['black        ';'blue         ';'green        ';...	           'cyan         ';'red          ';'magenta      ';...	           'yellow       ';'white        ';'orange       ';...	           'dk. orange   ';'lt. gray     ';'dk. gray     ';...	           'other...     ';'auto         ';'none         '];leSurfStr  = ['none  '; 'flat  '; 'interp';'map   ';'[RGB] '];leEdgeStr  = ['none  '; 'flat  '; 'interp';'[RGB] '];	         % constants for the extra colorsLASTBUILTINCOLOR = 8;ORANGE = 9;  DKORANGE = 10;LTGRAY = 11; DKGRAY = 12;OTHER = 13;  AUTO = 14; NONE = 15; % set up the uileH    = zeros(60,numAxes);lineH  = zeros(20,numAxes);patchH = zeros(20,numAxes);surfH  = zeros(20,numAxes);for k = 1:numAxes   [numLines(k)] = countobj('line', ga(k));   if numLines(k) > 0      [numLines(k),  lineH(1:numLines(k),k)] = countobj('line', ga(k));   end   [numPatch(k)] = countobj('patch', ga(k));   if numPatch(k) > 0      [numPatch(k), patchH(1:numPatch(k),k)] = countobj('patch', ga(k));   end   [numSurf(k)] = countobj('surface', ga(k));   if numSurf(k) > 0      [numSurf(k), surfH(1:numSurf(k),k)] = countobj('surface', ga(k));   end   numObj(k) = numLines(k) + numPatch(k)+ numSurf(k);   leH(1:numObj(k),k) = [lineH(1:numLines(k),k); ...                          patchH(1:numPatch(k),k); surfH(1:numSurf(k),k)];   totalLines(k) = numObj(k);   startObj(k) = 1;   stopObj(k) = numObj(k);endpopup_wid = 110;ctrl_height = 30;fig_width = 505;fig_height = (50*sum(totalLines)) + (12*numAxes) + 55;% This lets us only show a few axes if we have too much to fit on the screenstartAx=1; stopAx=numAxes;while fig_height>maxHgt & (startAx~=stopAx)   disp('The window required is bigger than the screen.')   %disp('Information will be truncated.')   disp(['There are ' num2str(numAxes) ' axes.  You can select which ones to edit.'])   disp('(Counting goes left to right, and top to bottom, ')   disp('just like natural reading order.)')   startAx=input('Start with axis number: ');   stopAx =input('Stop at axis number: ');   if stopAx<startAx,      stopAx=startAx;      disp('Stopping axis must be greater than or equal to starting axis.')   end   numAxes = stopAx-startAx+1;   fig_height = 45*sum(totalLines(startAx:stopAx)) + 12*numAxes + 55;end% We might have too many objects in just one axis so we have to% limit # of objects in the selected axis:if startAx == stopAx & (fig_height > maxHgt)   disp(['There are ' num2str(numObj(startAx)) ' objects in this axis'])   disp('That is too many to display at once.')   while fig_height > maxHgt	   startObj(startAx) = input('Start with object number: ');	   temp              = input('Stop at object number: ');	   stopObj(startAx)  = min(temp, numObj(startAx));	   if stopObj(startAx)<startObj(startAx),	      stopObj(startAx)=startObj(startAx);	      disp('Stopping object must be greater than or equal to starting object.')	   end	   numObj(startAx) = stopObj(startAx)-startObj(startAx)+1;	   fig_height = 45*numObj(startAx) + 10 + 55;	   if fig_height > maxHgt,	      disp('Still too many objects.  Try again...')	   end   endend% Set the window position.  Check if the window is already open.% If not, then we will first try to read its last saved position from% the pref file.  If not, we will place it at its default position.% Make sure that it will be drawn completely on the screen.% If not, move it so that it will.dErrFlag=0; fErrFlag=0;if ~exist('leStartXPos'),leStartXPos=[];leStartYPos=[]; endif isempty(leStartXPos)   curdir=pwd;   eval(['cd ' '''' matlabroot ''''])   eval(['cd(findomprefs)'], 'dErrFlag=1;')   if dErrFlag      mkdir_stat = mkdir('omPrefs');      if ~mkdir_stat         disp('** linedit: Unable to create ''omPrefs'' dir in MATLAB root dir.')         disp('** You may continue, but prefs will not be saved.')      end    else      eval(['load le5Prefs.mat'],'fErrFlag=1;');      if fErrFlag         leStartXPos = 50;         leStartYPos = 100;         save le5Prefs.mat leStartXPos leStartYPos      end      % make sure that the window will be on the screen!      if leStartXPos<1,leStartXPos=1;end      if leStartYPos<1,leStartYPos=1;end      if (leStartYPos+fig_height)>maxHgt         leStartYPos=maxHgt-fig_height;      end      if (leStartXPos+fig_width)>maxWid         leStartXPos=maxWid-fig_width;      end      end            eval(['cd ' '''' curdir ''''])         endif dErrFlag | fErrFlag   leStartXPos = 20;   leStartYPos = (maxHgt - fig_height)/2;endleFig = figure('pos',[leStartXPos, leStartYPos, fig_width, fig_height],...     'Resize', 'off','Name',['Line editor: editing figure ' num2str(gf)],...     'NumberTitle', 'off','MenuBar', 'none','Color','k',...     'Tag','lineEditingWindow');% set up the labelsuicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[45 fig_height-30 85 25],...          'HorizontalAlignment','Left',...          'String', ['Line Color' newLine '(Face Color)']);uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[165 fig_height-30 75 25],...          'HorizontalAlignment','Left',...          'String', ['Line Style' newLine 'Width']);uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[275 fig_height-30 95 25],...          'HorizontalAlignment','Left',...          'String', ['Symbol Type' newLine 'Edge Color']);uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[390 fig_height-30 75 25],...          'HorizontalAlignment','Left',...          'String', ['Symbol Size' newLine 'Face Color']);% set up the uicontrolsy_pos = fig_height - 35;for j=startAx:stopAx   y_pos = y_pos+20;	for i=startObj(j):stopObj(j)	   uicontrol('Style','Frame','Pos',[2 y_pos-75 500 50]);      y_pos = y_pos-50;      % show me!      if strcmp(get(leH(i,j),'Selected'),'on')         showStr = ['Don''t'];       else         showStr = 'Show';      end      edShowMeH(i,j) = uicontrol('Style','Push','Units','Pixels',...       'Position', [5 y_pos-16 41 36],...       'String',showStr,...       'UserData',ga(j), 'Tag', mat2str([i,j]),...       'Callback',...           ['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''showme'')']);      % line/patch color      isLine = strcmp(get(leH(i,j),'Type'), 'line');      isSurf  = strcmp(get(leH(i,j),'Type'), 'surface');      isPatch = strcmp(get(leH(i,j),'Type'), 'patch');      if isLine   	   lcolr = get(leH(i,j),'Color');         lBGcolr = lcolr;         lFGcolr = 'k';         if sum(lcolr) < 0.3 | lcolr == 'k'            lFGcolr = 'k';        %%%%%            lBGcolr = 'w';        %%%%%            end       elseif isPatch   	   lcolr = get(leH(i,j),'EdgeColor');         lBGcolr = lcolr;         lFGcolr = 'k';         if sum(lcolr) < 0.3 | lcolr == 'k'            lFGcolr = 'k';        %%%%%            lBGcolr = 'w';        %%%%%            end   	   pfColr = get(leH(i,j),'FaceColor');         pfBGcolr = pfColr;         pfFGcolr = 'k';         if sum(pfColr) < 0.3 | pfColr == 'k'            lFGcolr = 'k';        %%%%%            lBGcolr = 'w';        %%%%%            end       elseif isSurf         lcolr = [0 0 0];   	   seColr = get(leH(i,j),'EdgeColor');   	   sfColr = get(leH(i,j),'FaceColor');         sfStrFlag=0;         seStrFlag=0;         sfBGcolr = 'cyan';         sfFGcolr = 'k';         if isstr(sfColr)            sfStrFlag=1;            if strcmp(sfColr,'none')              sFaceIndex=1;             elseif strcmp(sfColr,'flat')              sFaceIndex=2;             elseif strcmp(sfColr,'interp')              sFaceIndex=3;             elseif strcmp(sfColr,'texturemap')              sFaceIndex=4;            end          else           lcolr = sfColr;           sFaceIndex=5;           sfBGcolr = sfColr;           if sum(sfBGcolr) < 0.3 | sfBGcolr == 'k'              sfFGcolr = [1 1 1];           end         end         seBGcolr='cyan';         seFGcolr='k';         if isstr(seColr)            seStrFlag=1;            if strcmp(seColr,'none')              sEdgeIndex=1;             elseif strcmp(seColr,'flat')              sEdgeIndex=2;             elseif strcmp(seColr,'interp')              sEdgeIndex=3;            end          else           lcolr = seColr;           sEdgeIndex=4;           seBGcolr = seColr;           if sum(seBGcolr) < 0.3 | seBGcolr == 'k'              seFGcolr = [1 1 1];           end         end      end      if (any(lcolr~=0 & lcolr~=1))         if all(lcolr==[1 0.5 0])            colrindex = ORANGE;            colorStr = leColors(colrindex);          elseif all(lcolr==[1.0 0.25 0.0])            colrindex = DKORANGE;            colorStr = leColors(colrindex);          elseif all(lcolr==[0.75 0.75 0.75])            colrindex = LTGRAY;            colorStr = leColors(colrindex);          elseif all(lcolr==[0.5 0.5 0.5])            colrindex = DKGRAY;            colorStr = leColors(colrindex);          else              colrindex = OTHER;         end       else   	   colrindex = lcolr(1)*4 + lcolr(2)*2 + lcolr(3) + 1;   	   colorStr = leColors(colrindex);      end      pfColrIndex = colrindex;      if isPatch         if (any(pfColr~=0 & pfColr~=1))            if strcmp(pfColr,'flat')               pfBGcolr = 'w';               pfFGcolr = 'k';	          elseif all(pfColr==[1 0.5 0])	            pfColrindex = ORANGE;	            pfColorStr = leColors(pfColrindex);	          elseif all(pfColr==[1.0 0.25 0.0])	            pfColrindex = DKORANGE;	            pfColorStr = leColors(pfColrindex);	          elseif all(pfColr==[0.75 0.75 0.75])	            pfColrindex = LTGRAY;	            pfColorStr = leColors(pfColrindex);	          elseif all(pfColr==[0.5 0.5 0.5])	            pfColrindex = DKGRAY;	            pfColorStr = leColors(pfColrindex);	          else               pfColrindex = OTHER;            end           else      	   pfColrIndex = pfColr(1)*4 + pfColr(2)*2 + pfColr(3) + 1;      	   pfColorStr = leColors(pfColrIndex);         end      end      % create the popup menus      % first the line/patch popup menus...      if isLine | isPatch         edLSFaceH(i,j) = 0;         edLSEdgeH(i,j) = 0;		 lFGcolr = [0 0 0];   %%% 08/01/08 fix		 pfFGcolr = [0 0 0];   %%% 08/01/08 fix   	   edLColrH(i,j) = uicontrol('Style','popup','Units','pixels',...   	    'Position',[45 y_pos 116 20],'String',leColorStr,...          'Value', colrindex,...           'UserData',ga(j), 'Tag', mat2str([i,j]),...    	    'BackgroundColor',lBGcolr,'ForeGroundColor',lFGcolr,...  	    'Callback',...             ['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''colr'')']);                  if isPatch      	   edLFColrH(i,j) = uicontrol('Style','popup','Units','pixels',...      	    'BackgroundColor',pfBGcolr,'ForeGroundColor',pfFGcolr,...      	    'Position',[45 y_pos-20 115 20],...      	    'String',leColorStr,...             'Value', pfColrIndex,...              'UserData',ga(j), 'Tag', mat2str([i,j]),...      	    'Callback',...                ['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''fcolr'')']);                   else             edLFColrH(i,j) = 0;          end        % then the surf popup menus...       elseif isSurf         if ~sfStrFlag            sFaceIndex = 5;         end         edLColrH(i,j) = 0;         edLFColrH(i,j) = 0;		 seFGcolr = [0 0 0];   %%% 08/01/08 fix		 sfFGcolr = [0 0 0];   %%% 08/01/08 fix   	   edLSFaceH(i,j) = uicontrol('Style','popup','Units','pixels',...   	    'BackgroundColor',sfBGcolr,'ForeGroundColor',sfFGcolr,...   	    'Position',[45 y_pos-20 116 20],...   	    'String',leSurfStr,...          'Value', sFaceIndex,...           'UserData',ga(j), 'Tag', mat2str([i,j]),...   	    'Callback',...             ['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''surf'')']);           	   edLSEdgeH(i,j) = uicontrol('Style','popup','Units','pixels',...   	    'BackgroundColor',seBGcolr,'ForeGroundColor',seFGcolr,...   	    'Position',[45 y_pos 116 20],...   	    'String',leEdgeStr,...          'Value', sEdgeIndex,...           'UserData',ga(j), 'Tag', mat2str([i,j]),...   	    'Callback',...             ['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''edge'')']);              end      if isLine | isPatch         % modify the popup menu         if colrindex == OTHER            % truncate the RGB components to fit w/in 13 chars.   	      for k=1:3   	         tempstr = [num2str(lcolr(k)) ' 0 '];   	         if tempstr(1) == '1'   	            tmpColrStr( (k-1)*4+1:k*4 ) = ' 1  ';   	          else   	            tmpColrStr( (k-1)*4+1:k*4 ) = [tempstr(2:4) ' '];   	         end   	      end            % update the line/face color popup string            newColorStr = leColorStr;            newColorStr(OTHER,1:13)=tmpColrStr(1:13);            set(edLColrH(i,j),'String',newColorStr);            set(edLColrH(i,j),'value',OTHER); %% <- bec. of ML4 bug         end      end      if isPatch         % modify the edge color popup menu         if pfColrIndex == OTHER            % truncate the RGB components to fit w/in 13 chars.   	      for k=1:3   	         tempstr = [num2str(pfColr(k)) ' 0 '];   	         if tempstr(1) == '1'   	            tmpColrStr( (k-1)*4+1:k*4 ) = ' 1  ';   	          else   	            tmpColrStr( (k-1)*4+1:k*4 ) = [tempstr(2:4) ' '];   	         end   	      end            % update the popup string            newColorStr = leColorStr;            newColorStr(OTHER,1:13)=tmpColrStr(1:13);            set(edLFColrH(i,j),'String',newColorStr);            set(edLFColrH(i,j),'value',OTHER); %% <- bec. of ML4 bug         end      end      linStyle = get(leH(i,j),'LineStyle');      if length(linStyle)==1         linStyle = [linStyle ' '];      end      temp = findstr(leStyles,linStyle(1:2));      styleIndex = (temp+1)/2;      edLStylH(i,j) = uicontrol('Style','popup','Units','pixels',...      'BackgroundColor','cyan','ForeGroundColor','black',...      'Position',[160 y_pos 110 20],...      'String',leStyleStr,...      'Value',styleIndex,...      'UserData',ga(j), 'Tag', mat2str([i,j]),...      'Callback',...          ['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''style'')']);	   edLWidH(i,j) = uicontrol('Style','edit','Units','pixels',...	    'BackgroundColor','magenta','ForeGroundColor','white',...	    'Position',[170 y_pos-23 40 25],...	    'String',num2str(get(leH(i,j),'LineWidth')),...       'UserData',ga(j), 'Tag', mat2str([i,j]),...    	 'Callback',...        ['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''width'')']);	      if (1)     %% isLine         symb = get(leH(i,j),'Marker');         symbIndex = findstr(leSymbol,symb(1));	      edLSymbH(i,j) = uicontrol('Style','popup','Units','pixels',... 	      'BackgroundColor','cyan','ForeGroundColor','black',...	      'Position',[270 y_pos 110 20],...	      'String',leSymbStr,...         'Value',symbIndex,...         'UserData',ga(j), 'Tag', mat2str([i,j]),...    	   'Callback',...            ['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''symb'')']);        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        % marker edge color        edgeClr = get(leH(i,j),'MarkerEdgeColor');        if ~isstr(edgeClr)           if (any(edgeClr>0 & edgeClr<1))		        if all(edgeClr==[1 0.5 0])		           colrindex = ORANGE;		           colorStr = leColors(colrindex);		         elseif all(edgeClr==[1.0 0.25 0.0])		           colrindex = DKORANGE;		           colorStr = leColors(colrindex);		         elseif all(edgeClr==[0.75 0.75 0.75])		           colrindex = LTGRAY;		           colorStr = leColors(colrindex);		         elseif all(edgeClr==[0.5 0.5 0.5])		           colrindex = DKGRAY;		           colorStr = leColors(colrindex);		         else	              colrindex = OTHER;	           end              else          	   colrindex = edgeClr(1)*4 + edgeClr(2)*2 + edgeClr(3) + 1;         	   colorStr = leColors(colrindex);           end         else           if edgeClr(1)=='a'              colrindex = AUTO;         %%%            elseif edgeClr(1)=='n'              colrindex = NONE;         %%%           end        end        if strcmp(edgeClr,'none') | strcmp(edgeClr,'auto') | ...                                    strcmp(edgeClr,'other...')           meBGcolr = 'w';         else           meBGcolr = edgeClr;        end        meFGcolr = 'k';        if sum(meBGcolr) < 0.3 | meBGcolr == 'k'           meFGcolr = [0 0 0];           meBGcolr = [1 1 1];        end        edLMkEdClrH(i,j) = uicontrol('Style','popup','Units','pixels',... 	      'BackgroundColor',meBGcolr,'ForeGroundColor',meFGcolr,...	      'Position',[270 y_pos-20 116 20],...	      'String',leMkClrStr,...         'Value',colrindex,...         'UserData',ga(j), 'Tag', mat2str([i,j]),...    	   'Callback',...            ['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''mkeclr'')']);	      % modify the popup menu	      if colrindex == OTHER	         % truncate the RGB components to fit w/in 13 chars.		      for k=1:3		         tempstr = [num2str(edgeClr(k)) ' 0 '];		         if tempstr(1) == '1'		            tmpColrStr( (k-1)*4+1:k*4 ) = ' 1  ';		          else		            tmpColrStr( (k-1)*4+1:k*4 ) = [tempstr(2:4) ' '];		         end		      end	         % update the popup string	         newColorStr = leMkClrStr;	         newColorStr(OTHER,1:13)=tmpColrStr(1:13);	         set(edLMkEdClrH(i,j),'String',newColorStr);	      end        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        % marker face color        faceClr = get(leH(i,j),'MarkerFaceColor');        if ~isstr(faceClr)           if (any(faceClr>0 & faceClr<1))		        if all(faceClr==[1 0.5 0])		           colrindex = ORANGE;		           colorStr = leColors(colrindex);		         elseif all(faceClr==[1.0 0.25 0.0])		           colrindex = DKORANGE;		           colorStr = leColors(colrindex);		         elseif all(faceClr==[0.75 0.75 0.75])		           colrindex = LTGRAY;		           colorStr = leColors(colrindex);		         elseif all(faceClr==[0.5 0.5 0.5])		           colrindex = DKGRAY;		           colorStr = leColors(colrindex);		         else	              colrindex = OTHER;	           end              else       	      colrindex = faceClr(1)*4 + faceClr(2)*2 + faceClr(3) + 1;      	      colorStr = leColors(colrindex);           end         else           if faceClr(1)=='a'              colrindex = AUTO;        %%%            elseif faceClr(1)=='n'              colrindex = NONE;        %%%           end        end        if strcmp(faceClr,'none') | strcmp(faceClr,'auto') | ...                                    strcmp(faceClr,'other...')           mfBGcolr = 'w';         else           mfBGcolr = faceClr;        end        mfFGcolr = 'k';        if sum(mfBGcolr) < 0.3 | mfBGcolr == 'k'           mfFGcolr = [0 0 0];           mfBGcolr = [1 1 1];        end	     edLMkFcClrH(i,j) = uicontrol('Style','popup','Units','pixels',... 	      'BackgroundColor',mfBGcolr,'ForeGroundColor',mfFGcolr,...	      'Position',[388 y_pos-20 116 20],...	      'String',leMkClrStr,...         'Value',colrindex,...         'UserData',ga(j), 'Tag', mat2str([i,j]),...    	   'Callback',...            ['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''mkfclr'')']);	      % modify the popup menu	      if colrindex == OTHER	         % truncate the RGB components to fit w/in 13 chars.		      for k=1:3		         tempstr = [num2str(faceClr(k)) ' 0 '];		         if tempstr(1) == '1'		            tmpColrStr( (k-1)*4+1:k*4 ) = ' 1  ';		          else		            tmpColrStr( (k-1)*4+1:k*4 ) = [tempstr(2:4) ' '];		         end		      end	         % update the popup string	         newColorStr = leMkClrStr;	         newColorStr(OTHER,1:13)=tmpColrStr(1:13);	         set(edLMkFcClrH(i,j),'String',newColorStr);	      end        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        % marker size	     edLMSzH(i,j) = uicontrol('Style','edit','Units','pixels',...	      'BackgroundColor','magenta','ForeGroundColor','white',...	      'Position',[395 y_pos 40 25],...	      'String',num2str(get(leH(i,j),'MarkerSize')),...         'UserData',ga(j), 'Tag', mat2str([i,j]),...         'Callback',...          ['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''mrkrSz'')']);       else          edLSymH(i,j) = 0;          edLMSzH(i,j) = 0;          edLMkEdClrH(i,j) = 0;          edLMkFcClrH(i,j) = 0;	   end		   edLDelH(i,j) = uicontrol('Style','push','Units','pixels',...	    'Position',[445 y_pos+2 40 20],...	    'String','Delete',...       'UserData',ga(j), 'Tag', mat2str([i,j]),...       'Callback',...          ['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''delete'')']);   end   y_pos = y_pos-28;endy_pos = y_pos-20;doneLH = uicontrol('Style','push','Units','pixels',...    'Position',[5 y_pos 50 20],...    'String','Done',...    'UserData',leFig, 'Tag', '[0 0]',...    'Callback',['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''done'')']);updateLH = uicontrol('Style','push','Units','pixels',...    'Position',[75 y_pos 50 20],...    'String','Update',...    'UserData',leFig, 'Tag', '[0 0]',...    'Callback',['lEditA5(get(gco,''UserData''),get(gco,''Tag''),''update'')']);% set the editing window so that we can't plot anything in itmlVer = version;if mlVer(1) == '4'   set(leFig, 'NextPlot', 'new'); elseif mlVer(1) >= '5'   %hidegui else   error('unknown MATLAB version!')   returnend% put these handles and parameters into a cell array and place it into% the 'Line editor' window 'UserData' field.  This replaces the use% of global variables. (6/13/02)leH = {edLColrH      edLDelH      edLFColrH    edLMkEdClrH ...       edLMkFcClrH   edLMSzH      edLSEdgeH    edLSFaceH   ...       edLStylH      edLSymbH     edLWidH      edShowMeH   ...       leColors      leColorStr   leFig        leH         ...       leMkClrStr    leStartXPos  leStartYPos  leStyles    ...       leSymbol      leSymbStr};set(leFig,'UserData',leH)% bring the graph back to the frontfigure(gf)