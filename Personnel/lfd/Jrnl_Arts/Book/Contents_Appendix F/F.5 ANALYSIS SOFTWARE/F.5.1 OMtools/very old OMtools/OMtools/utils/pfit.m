% pfit.m: find and test the polynomial fits for the pulse amplitude% usage: [coeff,Rsq,p,recon,xrange]=pfit(xdata,ydata,order);% Written by:  Jonathan Jacobs%              May 1998 - April 2010 (last mod: 04/08/10)function [coeff,Rsq,pval,recon,xrange,errmat,mu]=pfit(xdata,ydata,order,newfig)% precision of num2str for displayprec = 10;verbose = 0;	if nargout == 0, verbose = 1; enddoplot = 1;		if nargout, doplot = 0; end% calc the polynomial coefficientsif nargin < 4, newfig = 1; endif nargin < 3, order = input('What order fit? '); endif nargin < 2, help pfit;return;end[coeff, errmat, mu] = polyfit(xdata, ydata, order);% calculate the curves from the coefficients% we'd like a nice smooth curve, so get the xdata min and max% and break into at least 20 pieces (added 02/13/06).  Fixed 04/06/10.min_num_pts=20;num_pts = length(xdata);if num_pts < min_num_pts, num_pts = min_num_pts; endxmin = min(xdata); xmax = max(xdata);xrange = xmin:(xmax-xmin)/(num_pts-1):xmax;[recon,  delta ] = polyval(coeff, xrange, errmat, mu);  %% used for plotting[recon2, delta2] = polyval(coeff, xdata,  errmat, mu);  %% used for rsq calc[r,p] = corrcoef(ydata,recon2);Rsq=r(1,2).^2;pval=p(1,2);%% I know this Rsq is correct, but am no longer certain about corrcoef%[Rsq]=rsqr(ydata,recon2)%[Rsq4,pval4]=rsqr2(ydata,recon2);  %% busted.  don't use!% show the coefficientsif verbose	for i = 1:order+1	   disp(['coeff(' num2str(i) ') = ' num2str(coeff(i),prec)...	    ';         % (order x^' num2str(order+1-i) ')'])	end	disp(['r^2 = ' num2str(Rsq)]); 	disp(' ')endif doplot	if newfig == 1, 				figure	 elseif newfig == 0 ,		hold on	 elseif newfig == -1,		hold off	end		% see how well they correspond	hold on, box on	datlineH=plot(xdata, ydata, 'go');	set(datlineH,'markersize',3);		plot(xrange, recon, 'b--')	ylabel('Y data')	title(['Green: data,  Blue: polynomial of order ' num2str(order)...			 '   r^2: ' num2str(Rsq,3) ', p: ' num2str(pval,3)]) 	xlabel('X data')end