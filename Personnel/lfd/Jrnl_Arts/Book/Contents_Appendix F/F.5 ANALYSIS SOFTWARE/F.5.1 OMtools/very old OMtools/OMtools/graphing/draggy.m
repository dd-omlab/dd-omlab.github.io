% draggy.m: Called by dragger.  Performs the grunt work% involved with various user actions.% Written by:  Jonathan Jacobs%              March 1997 - January 1998  (last mod: 01/10/98)function draggy(action)ga = gca;go = gco;gf = ga.Parent;pt = ga.CurrentPoint;wNum=findme('dragEditingWindow');if ishandle(wNum)   h=wNum.UserData;else   disp('Editing window not found!')   returnenddrag_hand = findobj(h.drag_hList,'Tag','dragThis');if isempty(drag_hand)   returnenddrag_h=drag_hand(1);if strcmpi(action,'down')   %disp('down!')	gf.Pointer='crosshair';	   h.startXPt = pt(1,1);   h.startYPt = pt(1,2);   h.startZPt = pt(1,3);		if strcmpi(drag_h.Type,'line')      %disp('Line!')	   h.drag_x = drag_h.XData; initX = h.drag_x(1);	   h.drag_y = drag_h.YData; initY = h.drag_y(1);	   h.drag_z = drag_h.ZData;       if ~isempty(h.drag_z), initZ=h.drag_z(1); end %#ok<NASGU>		drag_h.UserData=[initX, initY];  %, initZ])	 elseif strcmpi(drag_h.Type,'text')      %disp('Text!')	   h.drag_pos = drag_h.Position;	 elseif strcmpi(drag_h.Type,'patch')      %disp('Patch!')	   h.drag_x = drag_h.XData; initX = h.drag_x(1);	   h.drag_y = drag_h.YData; initY = h.drag_y(1);	   h.drag_z = drag_h.ZData;       if ~isempty(h.drag_z),initZ = h.drag_z(1); end %#ok<NASGU>		drag_h.UserData=[initX, initY];  %, initZ])	end		% setup for mouse movement or release	%set(drag_h,'ButtonDownFcn','');	gf.WindowButtonMotionFcn='draggy(''move'')';	gf.WindowButtonUpFcn='draggy(''up'')'; elseif strcmpi(action,'move')   %disp('move!')   newXPt = pt(1,1);   newYPt = pt(1,2);   newZPt = pt(1,3);	delta_x = newXPt-h.startXPt;	delta_y = newYPt-h.startYPt;	delta_z = newZPt-h.startZPt;	if strcmpi(drag_h.Type,'line')      if ~h.dataLockX, drag_h.XData=h.drag_x+delta_x; end      if ~h.dataLockY, drag_h.YData=h.drag_y+delta_y; end      if ~h.dataLockZ, drag_h.ZData=h.drag_z+delta_z; end	 elseif strcmpi(drag_h.Type,'patch')	   drag_h.XData=h.drag_x+delta_x;	   drag_h.YData=h.drag_y+delta_y;	   drag_h.ZData=h.drag_z+delta_z;	 elseif strcmpi(drag_h.Type,'text')	   drag_h.Position=...         [h.drag_pos(1)+delta_x...         h.drag_pos(2)+delta_y...         h.drag_pos(3)+delta_z];	end elseif strcmpi(action,'up')   %disp('up!')	%stopXPt = pt(1,1);	%stopYPt = pt(1,2);	%stopZPt = pt(1,3);	gf.Pointer='arrow';	% setup for mouse movement or release	if strcmpi(drag_h.Type,'line') || strcmpi(drag_h.Type,'patch')		temp=drag_h.XData; newX=temp(1);		temp=drag_h.YData; newY=temp(1);		%temp = get(drag_h,'ZData'); newZ = temp(1);		initPt = drag_h.UserData;		initX = initPt(1);		initY = initPt(2);		%initZ = initPt(3);		disp(['Shifted by: ' num2str(newX-initX) ' X, ' num2str(newY-initY) ' Y'])	end		drag_h.ButtonDownFcn='draggy(''down'')';	gf.WindowButtonMotionFcn=[];	gf.WindowButtonUpFcn=[]; elseif strcmpi(action,'tggl')   %disp('tggl!')	drag_h.Tag='';          % no longer the current line	drag_h.ButtonDownFcn='draggy(''tggl'')';	go.Tag='dragThis';      % this is now the current line	go.ButtonDownFcn='draggy(''down'')';endwNum.UserData=h;