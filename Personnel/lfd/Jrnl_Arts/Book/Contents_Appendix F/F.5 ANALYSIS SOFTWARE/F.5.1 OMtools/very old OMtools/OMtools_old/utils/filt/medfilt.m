% medfilt.m: simple median filter % Perform an n-point median filter on a matrix.% Usage:  out = medfilt(in, n) where n is an odd number from 3 to 11% Written by:  Jonathan Jacobs%              April 1998  (last mod: 04/12/98)function [ outp ] = medfilt( inp, n )global sac_on samp_freq filename namelistif nargin < 2   help medfilt   returnend% make sure data is arranged so there are more rows than colummnsflipflag=0;[nRows, nCols] = size(inp);if nRows < nCols   inp = inp';   [nRows, nCols] = size(inp);   flipflag=1;end% This would have been a LOT easier if MATLAB 4 supported n-dimensional% arrays.  However, it didn't.  I had to write it this way for backwards% compatibility as we can't give up ML4 for a while ('cause windoze 95 sucks.)% 3ptmaif n == 3  outp(:,2:nRows-1) = median( [inp(1:nRows-2,:)  inp(2:nRows-1,:)...                               inp(3:nRows,:)]' );  outp=outp';  outp(1,:) = outp(2,:);  outp(nRows,:) = outp(nRows-1,:);  if flipflag, outp=outp'; end  returnend% 5ptmaif n == 5  outp(:,3:nRows-2) =median( [inp(1:nRows-4,:) inp(2:nRows-3,:)...                              inp(3:nRows-2,:) inp(4:nRows-1,:)...                              inp(5:nRows,:)]' );  outp=outp';  outp(1,:) = outp(3,:);  outp(2,:) = outp(3,:);  outp(nRows,:)   = outp(nRows-2,:);  outp(nRows-1,:) = outp(nRows-2,:);  if flipflag, outp=outp'; end  returnend% 7ptmaif n == 7  outp(:,4:nRows-3) = median( [inp(1:nRows-6,:) inp(2:nRows-5,:)...                               inp(3:nRows-4,:) inp(4:nRows-3,:)...                               inp(5:nRows-2,:) inp(6:nRows-1,:)...                               inp(7:nRows,:)]' );  outp=outp';  outp(1,:) = outp(4,:);  outp(2,:) = outp(4,:);  outp(3,:) = outp(4,:);  outp(nRows,:)   = outp(nRows-3,:);  outp(nRows-1,:) = outp(nRows-3,:);  outp(nRows-2,:) = outp(nRows-3,:);  if flipflag, outp=outp'; end  returnend% 9ptmaif n == 9  outp(:,5:nRows-4) =  median( [inp(1:nRows-8,:) inp(2:nRows-7,:)...                                inp(3:nRows-6,:) inp(4:nRows-5,:)...                                inp(5:nRows-4,:) inp(6:nRows-3,:)...                                inp(7:nRows-2,:) inp(8:nRows-1,:)...                                inp(9:nRows,:)]' );  outp=outp';  outp(1,:) = outp(5,:);  outp(2,:) = outp(5,:);  outp(3,:) = outp(5,:);  outp(4,:) = outp(5,:);  outp(nRows,:)   = outp(nRows-4,:);  outp(nRows-1,:) = outp(nRows-4,:);  outp(nRows-2,:) = outp(nRows-4,:);  outp(nRows-3,:) = outp(nRows-4,:);  if flipflag, outp=outp'; end  returnend% 11ptmaif n == 11  outp(:,6:nRows-5) =  median( [inp(1:nRows-10,:) inp(2:nRows-9,:)...                                inp(3:nRows-8,:)  inp(4:nRows-7,:)...                                inp(5:nRows-6,:)  inp(6:nRows-5,:)...                                inp(7:nRows-4,:)  inp(8:nRows-3,:)...                                inp(9:nRows-2,:)  inp(10:nRows-1,:)...                                inp(11:nRows,:)]' );  outp=outp';  outp(1,:) = outp(6,:);  outp(2,:) = outp(6,:);  outp(3,:) = outp(6,:);  outp(4,:) = outp(6,:);  outp(5,:) = outp(6,:);  outp(nRows,:)   = outp(nRows-5,:);  outp(nRows-1,:) = outp(nRows-5,:);  outp(nRows-2,:) = outp(nRows-5,:);  outp(nRows-3,:) = outp(nRows-5,:);  outp(nRows-4,:) = outp(nRows-5,:);  if flipflag, outp=outp'; end  returnenddisp('filter order must be an odd number from 3 to 11.')