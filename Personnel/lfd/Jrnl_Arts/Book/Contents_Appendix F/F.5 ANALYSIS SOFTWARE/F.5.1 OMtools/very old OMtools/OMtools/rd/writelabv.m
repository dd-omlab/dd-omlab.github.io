% writelabv.m: quick & dirty way to re-write modified .lab files% back to disk while maintaining the proper 'labv' header and data format%   1. Read in the .lab file that you wish to modify%   2. Modify the channel(s) as desired (e.g. rh = -rh;).%   3. Run this program% It will make a BACKUP COPY of the original file and then modify the original% thereby preserving the original creation date.% written by: Jonathan Jacobs%             October 2008  (last mod: 10/06/08)% get the header for the file to be modified and read the original scale values% 24306 is a magic number for ver 1.4 of the OMlab .lab format.  If necessary% it would be possible to detect version and change as appropriate. [fn, pn]=uigetfile('*.lab', 'Select file:');fid_r = fopen([pn fn]);header = fread(fid_r, 24306,'uchar');scalevals = str2double(char(header(1:40)'));fclose(fid_r);% tell Unix to copy the original file to a safe backup ('_orig')[fname, exten] = strtok(fn,'.');eval( ['! cp ' [fname exten] ' ' [fname '_orig' exten] ])% undo the scaling to prepare for storage back to filerh = rh/(scalevals(1)*10/65536);lh = lh/(scalevals(2)*10/65536);st = st/(scalevals(3)*10/65536);rv = rv/(scalevals(4)*10/65536);lv = lv/(scalevals(5)*10/65536);sv = sv/(scalevals(6)*10/65536);% arrange the data into an interleaved arraytemp_data = [rh'; lh'; st'; rv'; lv'; sv'];data = temp_data(1:end);% open the data file, write the header and the modified data, then close itfid_w = fopen([pn fn], 'w', 'b');fwrite(fid_w, header, 'uchar');fwrite(fid_w, data, 'short');fclose(fid_w);return