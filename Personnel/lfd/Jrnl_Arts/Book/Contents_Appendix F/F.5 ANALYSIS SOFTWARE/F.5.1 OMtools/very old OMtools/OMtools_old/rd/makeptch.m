% makeptch.m: called from refix.m to create a patch that will smooth% the transition between the shifted and unshifted regions.% The patch is either a cubic interpolation or a spline.% written by: Jonathan Jacobs%             March 1996 - September 1999 (last mod: 09/09/99)function mkpatchseg = makeptch( temp, leftPt, rtPt, mode )datArray = temp(:,end);[lastRow lastCol] = size(datArray);leftVal   = datArray(leftPt,lastCol);rtVal     = datArray(rtPt,lastCol);transWid  = rtPt - leftPt;% if the two points are right next to each other, there really isn't% anything for us to do in terms of interpolation.if transWid == 1   mkpatchseg = ([leftVal; rtVal]);   returnend% find the slopes of the line segments to either side of the patch we're% making. (higher values of 'wid' work better when the signal is noisy.wid = 4;leftSlope = (datArray(leftPt,lastCol) - datArray(leftPt-wid,lastCol))/(wid);if leftSlope == 0; leftSlope = 0.01; endrtSlope   = (datArray(rtPt+wid,lastCol) - datArray(rtPt,lastCol))/(wid);if rtSlope == 0; rtSlope = 0.01; end% if the slopes are opposite, we will calculate where the line segments% will intersect.%if sign(leftSlope) ~= sign(rtSlope)if (0)   leftExtrap = leftVal + (leftSlope:leftSlope:(transWid-1)*leftSlope);   rtExtrap   = rtVal   - (((transWid-1)*rtSlope):-rtSlope:rtSlope);   difference = leftExtrap - rtExtrap;   intlist    = find( abs(difference) == min(abs(difference)) );   midpt      = intlist(1);   midval     = leftExtrap(midpt); else	% simply calculate a line between the endpoints.    if abs(rtVal - leftVal) <  eps        temp = leftVal*ones(transWid+1,1);    else            step = (rtVal - leftVal)/transWid;    % transWid+1        temp = ( leftVal:step:rtVal )';       % samples wide    end         midpt  = fix(length(temp)/2);    midval = temp(midpt);endmode = 'cubic';temp = interp1( [leftPt-9:leftPt leftPt+midpt rtPt:rtPt+9],...               [datArray(leftPt-9:leftPt)' midval' datArray(rtPt:rtPt+9)'],...               [leftPt-9:rtPt+9], mode )';templen = length(temp);mkpatchseg = temp(10:templen-9);