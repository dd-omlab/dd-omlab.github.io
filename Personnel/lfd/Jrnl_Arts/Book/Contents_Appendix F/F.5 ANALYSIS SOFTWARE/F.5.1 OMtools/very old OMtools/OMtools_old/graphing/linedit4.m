% linedit4.m:   change/delete line properties in a figure% Written by:  Jonathan Jacobs%              March 1997 - March 1999  (last mod: 03/03/99)function linedit(gf)if isempty(get(0,'Child'))   disp('Nothing to edit, slick.')   returnendif nargin == 0   gf = findHotW;   if gf == -1;      disp('No valid plot window found.  Possible reasons:')      disp(' * You don''t have a figure window open.')      disp(' * You are trying to edit a Zoomtool window.')      disp(' * I am having a nervous breakdown.')      return   endendisMac=0; isHose=0;comp = computer;if lower(comp(1)) == 'm'   isMac=1; else   isHose=1;endif strcmp( get(gf,'Tag'), 'EditingWindow')   disp( 'Bring a graph window to the front and try again.')   returnend% check if the line editing window is already open% if it is, bring it to the frontwNum = findMe('lineEditingWindow');if wNum > -1   figure(wNum)   returnendglobal leH edLColrH edLFColrH edLSFaceH edLSEdgeH edLStylH leStyleStrglobal edLWidH edLMSzH edLDelH edShowMeHglobal leColors leStyles leColorStr leStyleStrglobal leFig leStartXPos leStartYPosscrsize = get(0,'Screensize');mBarHgt = 30;maxHgt = scrsize(4)-mBarHgt;maxWid = scrsize(3);% this little bit of fun is needed because not every child in the figure is an axis.ch = get(gf,'Children');numCh = length(ch);if numCh == 0   disp('Nothing to edit, slick.')   returnendcount = 0;for i = 1:numCh   if strcmp(lower(get(ch(i),'type')),'axes')      count = count + 1;      tempga(count) = ch(i);      axpos(count,:) = get(tempga(count),'Position');   endend% howzabout a rudimentary sorting from top to bottom% and from left to right, in case we've got m x n axes?tempXY = axpos(:,1:2);[dummy,ind] = sort(tempXY(:,1));ind = flipud(ind);tempXY = tempXY(ind,:);tempga = tempga(ind);[dummy,ind] = sort(tempXY(:,2));ind = flipud(ind);tempXY = tempXY(ind,:);ga = tempga(ind);numAxes = length(ga);tmpColrStr = blanks(13);leColors = ['k','b','g','c','r','m','y','w'];leStyles = ['+ ','x ','* ',': ','. ','- ','o ','--','-.'];leStyleStr = ['plus|x-mark|star|dotted|points|solid|circle|dashed|dashdot'];leColorStr = ['black        ';'blue         ';'green        ';...	           'cyan         ';'red          ';'magenta      ';...	           'yellow       ';'white        ';'other...     '];leSurfStr  = ['none  '; 'flat  '; 'interp';'map   ';'[RGB] '];leEdgeStr  = ['none  '; 'flat  '; 'interp';'[RGB] '];	         % set up the uileH = zeros(60,numAxes);lineH = zeros(20,numAxes);patchH = zeros(20,numAxes);surfH = zeros(20,numAxes);for k = 1:numAxes   [numLines(k)] = countobj('line', ga(k));   if numLines(k) > 0      [numLines(k),  lineH(1:numLines(k),k)] = countobj('line', ga(k));   end   [numPatch(k)] = countobj('patch', ga(k));   if numPatch(k) > 0      [numPatch(k), patchH(1:numPatch(k),k)] = countobj('patch', ga(k));   end   [numSurf(k)] = countobj('surface', ga(k));   if numSurf(k) > 0      [numSurf(k), surfH(1:numSurf(k),k)] = countobj('surface', ga(k));   end   numObj(k) = numLines(k) + numPatch(k)+ numSurf(k);   leH(1:numObj(k),k) = [lineH(1:numLines(k),k); ...                          patchH(1:numPatch(k),k); surfH(1:numSurf(k),k)];   totalLines(k) = numObj(k);   startObj(k) = 1;   stopObj(k) = numObj(k);endfig_width = 310;fig_height = (25*sum(totalLines)) + (10*numAxes) + 50;% This lets us only show a few axes if we have too much to fit on the screenstartAx=1; stopAx=numAxes;while fig_height>maxHgt & (startAx ~= stopAx)   disp('The window required is bigger than the screen.')   %disp('Information will be truncated.')   disp(['There are ' num2str(numAxes) ' axes.  You can select which ones to edit.'])   disp('(Counting goes left to right, and top to bottom, ')   disp('just like natural reading order.)')   startAx=input('Start with axis number: ');   stopAx =input('Stop at axis number: ');   if stopAx<startAx,      stopAx=startAx;      disp('Stopping axis must be greater than or equal to starting axis.')   end   numAxes = stopAx-startAx+1;   fig_height = 25*sum(totalLines(startAx:stopAx)) + 10*numAxes + 50;end% We might have too many objects in just one axis so we have to% limit # of objects in the selected axis:if startAx == stopAx & (fig_height > maxHgt)   disp(['There are ' num2str(numObj(startAx)) ' objects in this axis'])   disp('That is too many to display at once.')   while fig_height > maxHgt	   startObj =input('Start with object number: ');	   stopObj  =input('Stop at object number: ');	   if stopObj<startObj,	      stopObj=startObj;	      disp('Stopping axis must be greater than or equal to starting axis.')	   end	   numObj(startAx) = stopObj-startObj+1;	   fig_height = 25*numObj(startAx) + 10 + 50;	   if fig_height > maxHgt,	      disp('Still too many objects.  Try again...')	   end   endend% Set the window position.  Check if the window is already open.% If not, then we will first try to read its last saved position from% the pref file.  If not, we will place it at its default position.% Make sure that it will be drawn completely on the screen.% If not, move it so that it will.dErrFlag=0; fErrFlag=0;if isempty(leStartXPos)   curdir=pwd;   eval(['cd ' '''' matlabroot ''''])   eval(['cd omprefs'], 'dErrFlag=1;')   if ~dErrFlag      eval(['load le4Prefs.mat'],'fErrFlag=1;');      eval(['cd ' '''' curdir ''''])       % make sure that the window will be on the screen!      if leStartXPos<1,leStartXPos=1;end      if leStartYPos<1,leStartYPos=1;end      if (leStartYPos+fig_height)>maxHgt         leStartYPos=maxHgt-fig_height;      end      if (leStartXPos+fig_width)>maxWid         leStartXPos=maxWid-fig_width;      end       else      mkdir_stat = mkdir('omprefs');   end         endif dErrFlag | fErrFlag   leStartXPos = 20;   leStartYPos = (maxHgt - fig_height)/2;endleFig = figure('pos',[leStartXPos, leStartYPos, fig_width, fig_height],...       'Resize', 'off', 'Color','k',...       'Name', ['Line editor: editing figure ' num2str(gf)],...       'NumberTitle', 'off',...       'MenuBar', 'none','Tag','lineEditingWindow');% set up the labelsuicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[45 fig_height-25 80 20], 'String', 'Color');uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[130 fig_height-25 75 20], 'String', 'Style');uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[210 fig_height-25 35 20], 'String', 'Width');uicontrol('Style', 'text', 'Units', 'pixels',...          'Position',[245 fig_height-25 30 20], 'String', 'Mrk');% set up the uicontrolsy_pos = fig_height - 25;for j=startAx:stopAx   frameHt = numObj(j)*25;   if frameHt      uicontrol('Style', 'Frame',...                'Position', [2 y_pos-3-frameHt 302 frameHt])   end	for i=startObj(j):stopObj(j)      y_pos = y_pos-25;      % show me!      if strcmp(get(leH(i,j),'Selected'),'on')         showStr = ['Don''t'];       else         showStr = 'Show';      end      edShowMeH(i,j) = uicontrol('Style','Push','Units','Pixels',...       'Position', [5 y_pos 35 18],...       'String',showStr,...       'UserData',ga(j), 'Tag', mat2str([i,j]),...       'Callback',...           ['lEditA4(get(gco,''UserData''),get(gco,''Tag''),''showme'')']);      % line/patch color      isLine  = strcmp(get(leH(i,j),'Type'), 'line');      isSurf  = strcmp(get(leH(i,j),'Type'), 'surface');      isPatch = strcmp(get(leH(i,j),'Type'), 'patch');      if isLine   	   lcolr = get(leH(i,j),'Color');         lBGcolr = lcolr;         lFGcolr = 'k';         if sum(lcolr) < 0.3 | lcolr == 'k'            lFGcolr = 'w';         end       elseif isPatch   	   lcolr  = get(leH(i,j),'EdgeColor');         lBGcolr = lcolr;         lFGcolr = 'k';         if sum(lcolr) < 0.3 | lcolr == 'k'            lFGcolr = 'w';         end   	   pfColr = get(leH(i,j),'FaceColor');         pfBGcolr = pfColr;         pfFGcolr = 'k';         if sum(pfColr) < 0.3 | pfColr == 'k'            pfFGcolr = 'w';         end       elseif isSurf         lcolr = [0 0 0];   	   sfColr = get(leH(i,j),'FaceColor');   	   seColr = get(leH(i,j),'EdgeColor');         sfStrFlag=0;         seStrFlag=0;         sfBGcolr = 'cyan';         sfFGcolr = 'k';         if isstr(sfColr)            sfStrFlag=1;            if strcmp(sfColr,'none')              sFaceIndex=1;             elseif strcmp(sfColr,'flat')              sFaceIndex=2;             elseif strcmp(sfColr,'interp')              sFaceIndex=3;             elseif strcmp(sfColr,'texturemap')              sFaceIndex=4;            end          else           lcolr = sfColr;           sFaceIndex=5;           sfBGcolr = sfColr;           if sum(sfBGcolr) < 0.3 | sfBGcolr == 'k'              sfFGcolr = [1 1 1];           end         end         seBGcolr='cyan';         seFGcolr='k';         if isstr(seColr)            seStrFlag=1;            if strcmp(seColr,'none')              sEdgeIndex=1;             elseif strcmp(seColr,'flat')              sEdgeIndex=2;             elseif strcmp(seColr,'interp')              sEdgeIndex=3;            end          else           lcolr = seColr;           sEdgeIndex=4;           seBGcolr = seColr;           if sum(seBGcolr) < 0.3 | seBGcolr == 'k'              seFGcolr = [1 1 1];           end         end      end      if (any(lcolr~=0 & lcolr~=1))         colrindex = 9;       else   	   colrindex = lcolr(1)*4 + lcolr(2)*2 + lcolr(3) + 1;   	   colorStr = leColors(colrindex);      end      if isPatch         if (any(pfColr~=0 & pfColr~=1))            pfColrIndex = 9;          else      	   pfColrIndex = pfColr(1)*4 + pfColr(2)*2 + pfColr(3) + 1;      	   pfColorStr = leColors(pfColrIndex);         end      end      % create the popup menu      if isLine | isPatch         edLSFaceH(i,j) = 0;         edLSEdgeH(i,j) = 0;   	   edLColrH(i,j) = uicontrol('Style','popup','Units','pixels',...   	    'BackgroundColor',lBGcolr,'ForeGroundColor',lFGcolr,...   	    'Position',[45 y_pos 80 20],...   	    'String',leColorStr,...          'Value', colrindex,...           'UserData',ga(j), 'Tag', mat2str([i,j]),...   	    'Callback',...             ['lEditA4(get(gco,''UserData''),get(gco,''Tag''),''colr'')']);                  if isPatch      	   edLFColrH(i,j) = uicontrol('Style','popup','Units','pixels',...      	    'BackgroundColor',pfBGcolr,'ForeGroundColor',pfFGcolr,...      	    'Position',[130 y_pos 80 20],...      	    'String',leColorStr,...             'Value', pfColrIndex,...              'UserData',ga(j), 'Tag', mat2str([i,j]),...      	    'Callback',...                ['lEditA4(get(gco,''UserData''),get(gco,''Tag''),''fcolr'')']);                   else             edLFColrH(i,j) = 0;          end       elseif isSurf         if ~sfStrFlag            sFaceIndex = 5;         end         edLColrH(i,j) = 0;         edLFColrH(i,j) = 0;   	   edLSFaceH(i,j) = uicontrol('Style','popup','Units','pixels',...   	    'BackgroundColor',sfBGcolr,'ForeGroundColor',sfFGcolr,...   	    'Position',[45 y_pos 80 20],...   	    'String',leSurfStr,...          'Value', sFaceIndex,...           'UserData',ga(j), 'Tag', mat2str([i,j]),...   	    'Callback',...             ['lEditA4(get(gco,''UserData''),get(gco,''Tag''),''surf'')']);           	    %'BackgroundColor',sfBGcolr,'ForeGroundColor',sfFGcolr,...   	   edLSEdgeH(i,j) = uicontrol('Style','popup','Units','pixels',...   	    'BackgroundColor',seBGcolr,'ForeGroundColor',seFGcolr,...   	    'Position',[130 y_pos 80 20],...   	    'String',leEdgeStr,...          'Value', sEdgeIndex,...           'UserData',ga(j), 'Tag', mat2str([i,j]),...   	    'Callback',...             ['lEditA4(get(gco,''UserData''),get(gco,''Tag''),''edge'')']);              end      if isLine | isPatch         % modify the popup menu         if colrindex == 9            % truncate the RGB components to fit w/in 13 chars.   	      for k=1:3   	         tempstr = [num2str(lcolr(k)) ' 0 '];   	         if tempstr(1) == '1'   	            tmpColrStr( (k-1)*4+1:k*4 ) = ' 1  ';   	          else   	            tmpColrStr( (k-1)*4+1:k*4 ) = [tempstr(2:4) ' '];   	         end   	      end            % update the line/face color popup string            newColorStr = leColorStr;            newColorStr(9,1:13)=tmpColrStr(1:13);            set(edLColrH(i,j),'String',newColorStr);            set(edLColrH(i,j),'value',9); %% <- bec. of ML4 bug         end      end      if isPatch         % modify the edge color popup menu         if pfColrIndex == 9            % truncate the RGB components to fit w/in 13 chars.   	      for k=1:3   	         tempstr = [num2str(pfColr(k)) ' 0 '];   	         if tempstr(1) == '1'   	            tmpColrStr( (k-1)*4+1:k*4 ) = ' 1  ';   	          else   	            tmpColrStr( (k-1)*4+1:k*4 ) = [tempstr(2:4) ' '];   	         end   	      end            % update the popup string            newColorStr = leColorStr;            newColorStr(9,1:13)=tmpColrStr(1:13);            set(edLEColrH(i,j),'String',newColorStr);            set(edLEColrH(i,j),'value',9); %% <- bec. of ML4 bug         end      end      if (isLine)  %%isLine         linStyle = get(leH(i,j),'LineStyle');         if length(linStyle)==1            linStyle = [linStyle ' '];         end         temp = findstr(leStyles,linStyle(1:2));         styleIndex = (temp(1)+1)/2;	      edLStylH(i,j) = uicontrol('Style','popup','Units','pixels',...	      'BackgroundColor','cyan','ForeGroundColor','black',...	      'Position',[135 y_pos 75 20],...	      'String',leStyleStr,...         'Value',styleIndex,...         'UserData',ga(j), 'Tag', mat2str([i,j]),...         'Callback',...          ['lEditA4(get(gco,''UserData''),get(gco,''Tag''),''style'')']);       else          edLStylH(i,j) = 0;	   end	   edLWidH(i,j) = uicontrol('Style','edit','Units','pixels',...	    'BackgroundColor','magenta','ForeGroundColor','white',...	    'Position',[215 y_pos 30 20],...	    'String',num2str(get(leH(i,j),'LineWidth')),...       'UserData',ga(j), 'Tag', mat2str([i,j]),...    	 'Callback',...          ['lEditA4(get(gco,''UserData''),get(gco,''Tag''),''width'')']);	     if (isLine) %%isLine	     edLMSzH(i,j) = uicontrol('Style','edit','Units','pixels',...	      'BackgroundColor','magenta','ForeGroundColor','white',...	      'Position',[250 y_pos 25 20],...	      'String',num2str(get(leH(i,j),'MarkerSize')),...         'UserData',ga(j), 'Tag', mat2str([i,j]),...         'Callback',...          ['lEditA4(get(gco,''UserData''),get(gco,''Tag''),''mrkrSz'')']);       else          edLMSzH(i,j) = 0;	   end		   edLDelH(i,j) = uicontrol('Style','push','Units','pixels',...	    'Position',[275 y_pos 25 20],...	    'String','Del',...       'UserData',ga(j), 'Tag', mat2str([i,j]),...       'Callback',...          ['lEditA4(get(gco,''UserData''),get(gco,''Tag''),''delete'')']);   end   y_pos = y_pos-10;endy_pos = y_pos-20;doneLH = uicontrol('Style','push','Units','pixels',...    'Position',[5 y_pos 50 20],...    'String','Done',...    'UserData',leFig, 'Tag', '[0 0]',...    'Callback',['lEditA4(get(gco,''UserData''),get(gco,''Tag''),''done'')']);updateLH = uicontrol('Style','push','Units','pixels',...    'Position',[75 y_pos 50 20],...    'String','Update',...    'UserData',leFig, 'Tag', '[0 0]',...    'Callback',['lEditA4(get(gco,''UserData''),get(gco,''Tag''),''update'')']);% set the editing window so that we can't plot anything in itmlVer = version;if mlVer(1) == '4'   set(leFig, 'NextPlot', 'new'); elseif mlVer(1) == '5'   %hidegui else   error('unknown MATLAB version!')   returnend% bring the graph back to the frontfigure(gf)