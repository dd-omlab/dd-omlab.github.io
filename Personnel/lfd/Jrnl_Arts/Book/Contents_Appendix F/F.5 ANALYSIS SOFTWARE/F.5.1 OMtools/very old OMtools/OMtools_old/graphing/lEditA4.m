% lEditA4.m:  called by lEdit to make the changes to line properties.% Written by:  Jonathan Jacobs%              March 1997 - May 1998 (last mod: 05/18/98)function lEditAct(ga, whichStr, action)global leH edLColrH edLFColrH edLSFaceH edLSEdgeH edLStylH global edLWidH edLMSzH edLDelH edShowMeHglobal leColors leStyles leColorStr global leFig leStartXPos leStartYPostag = str2num(whichStr);which = tag(1);col = tag(2);tmpColrStr = blanks(13);if strcmp(action, 'delete')   delete(leH(which,col))   % remove the controls for that row   delete(edShowMeH(which,col));   if (edLColrH(which,col))      delete(edLColrH(which,col));   end   if (edLFColrH(which,col))      delete(edLFColrH(which,col));   end   if (edLSEdgeH(which,col))      delete(edLSEdgeH(which,col));   end   if (edLSFaceH(which,col))      delete(edLSFaceH(which,col));   end   delete(edLWidH(which,col));   if (edLStylH(which,col))      delete(edLStylH(which,col));      delete(edLMSzH(which,col));   end   delete(edLDelH(which,col)); elseif strcmp(action, 'showme')   showMe = get(leH(which,col), 'Selected');   if strcmp(showMe,'on')      newSVal = 'off';      newStr = ['Show'];    else      newSVal = 'on';      newStr = ['Don''t'];   end   set(leH(which,col), 'Selected', newSVal);   set(edShowMeH(which,col), 'String', newStr); elseif strcmp(action, 'mrkrSz')   newMkrSz = str2num(get(edLMSzH(which,col), 'String'));   if (newMkrSz > 0) & (newMkrSz <= 36)      set(leH(which,col), 'MarkerSize', newMkrSz);   end elseif strcmp(action, 'width')   newwid = str2num(get(edLWidH(which,col), 'String'));   if (newwid >= 0) & (newwid <= 10)      set(leH(which,col), 'LineWidth', newwid);   end elseif strcmp(action, 'surf')   value = get(edLSFaceH(which,col), 'value');   set(edLSFaceH(which,col), 'BackgroundColor', 'c')   set(edLSFaceH(which,col), 'ForegroundColor', 'k')   if value == 1      set(leH(which,col), 'FaceColor', 'none')    elseif value == 2      set(leH(which,col), 'FaceColor', 'flat')    elseif value == 3       set(leH(which,col), 'FaceColor', 'interp')   elseif value == 4      set(leH(which,col), 'FaceColor', 'texturemap')    elseif value == 5      newSurf = uisetcolor;      if length(newSurf) == 3         set(leH(which,col), 'FaceColor', newSurf)         set(edLSFaceH(which,col), 'BackgroundColor', newSurf)         if sum(newSurf) < 0.3 | newSurf == 'k'            set(edLSFaceH(which,col), 'ForegroundColor', [1 1 1])         end      end   end elseif strcmp(action, 'edge')   value = get(edLSEdgeH(which,col), 'value');   set(edLSEdgeH(which,col), 'BackgroundColor', 'c')   set(edLSEdgeH(which,col), 'ForegroundColor', 'k')   if value == 1      set(leH(which,col), 'EdgeColor', 'none')    elseif value == 2      set(leH(which,col), 'EdgeColor', 'flat')    elseif value == 3       set(leH(which,col), 'EdgeColor', 'interp')    elseif value == 4      newEdge = uisetcolor;      if length(newEdge) == 3         set(leH(which,col), 'EdgeColor', newEdge)         set(edLSEdgeH(which,col), 'BackgroundColor', newEdge)         if sum(newEdge) < 0.3 | newEdge == 'k'            set(edLSEdgeH(which,col), 'ForegroundColor', [1 1 1])         end      end   end    elseif strcmp(action, 'colr')   isLine = strcmp(get(leH(which,col),'Type'), 'line');   set(edLColrH(which,col), 'BackgroundColor', 'c')   set(edLColrH(which,col), 'ForegroundColor', 'k')   colorval = get(edLColrH(which,col), 'value');   if colorval == 9      newcolor = uisetcolor;      if length(newcolor) ~= 3         return      end      % truncate the RGB components to fit w/in 13 chars.      for k=1:3         tempstr = [num2str(newcolor(k)) ' 0 '];         if tempstr(1) == '1'            tmpColrStr( (k-1)*4+1:k*4 ) = ' 1  ';          else            tmpColrStr( (k-1)*4+1:k*4 ) = [tempstr(2:4) ' '];         end      end      % update the popup string      newColorStr = leColorStr;      newColorStr(9,1:13)=tmpColrStr(1:13);      set(edLColrH(which,col),'String',newColorStr);      set(edLColrH(which,col),'value',9); %% <- bec. of ML4 bug      linedit4    else % colorval ~= 9      %restore old colors string      set(edLColrH(which,col),'String',leColorStr);      set(edLColrH(which,col),'value',colorval); %% <- bec. of ML4 bug      newcolor = leColors(colorval);   end   if ~isempty(findstr(newcolor,leColors)) | (colorval == 9)      if (isLine)         set(leH(which,col), 'Color', newcolor);       else         %set(leH(which,col), 'FaceColor', newcolor);         set(leH(which,col), 'EdgeColor', newcolor);      end   end   set(edLColrH(which,col), 'BackgroundColor', newcolor)   if sum(newcolor) < 0.3 | newcolor == 'k'      set(edLColrH(which,col), 'ForegroundColor', 'w')   end elseif strcmp(action, 'fcolr')   set(edLFColrH(which,col), 'BackgroundColor', 'c')   set(edLFColrH(which,col), 'ForegroundColor', 'k')   colorval = get(edLFColrH(which,col), 'value');   if colorval == 9      newcolor = uisetcolor;      if length(newcolor) ~= 3         return      end      % truncate the RGB components to fit w/in 13 chars.      for k=1:3         tempstr = [num2str(newcolor(k)) ' 0 '];         if tempstr(1) == '1'            tmpColrStr( (k-1)*4+1:k*4 ) = ' 1  ';          else            tmpColrStr( (k-1)*4+1:k*4 ) = [tempstr(2:4) ' '];         end      end      % update the popup string      newColorStr = leColorStr;      newColorStr(9,1:13)=tmpColrStr(1:13);      set(edLFColrH(which,col),'String',newColorStr);      set(edLFColrH(which,col),'value',9); %% <- bec. of ML4 bug      linedit4    else % colorval ~= 9      %restore old colors string      set(edLFColrH(which,col),'String',leColorStr);      set(edLFColrH(which,col),'value',colorval); %% <- bec. of ML4 bug      newcolor = leColors(colorval);   end   if ~isempty(findstr(newcolor,leColors)) | (colorval == 9)      set(leH(which,col), 'FaceColor', newcolor);   end   set(edLFColrH(which,col), 'BackgroundColor', newcolor)   if sum(newcolor) < 0.3 | newcolor == 'k'      set(edLFColrH(which,col), 'ForegroundColor', 'w')   end elseif strcmp(action, 'style')   temp = get(edLStylH(which,col), 'value');   newstyle = ( (2*temp)-1:(2*temp) );   set(leH(which,col), 'LineStyle', leStyles(newstyle)); elseif strcmp(action, 'update')   clear global leH edLColrH edLStylH edLWidH   clear global edLSFaceH edLSEdgeH edLEColrH   clear global edLMSzH edLDelH leColors leStyles   startXYPos = get(leFig, 'Position');   leStartXPos = startXYPos(1);   leStartYPos = startXYPos(2);   close(leFig)   linedit4 elseif strcmp(action, 'done')   curdir=pwd;   eval(['cd ' '''' matlabroot ''''])   eval(['cd(findomprefs)'])   startXYPos = get(leFig, 'Position');   leStartXPos = startXYPos(1);   leStartYPos = startXYPos(2);   eval(['save le4Prefs.mat leStartXPos leStartYPos'])   eval(['cd ' '''' curdir ''''])    clear global leH edLColrH edLStylH edLWidH edShowMeH   clear global edLSFaceH edLSEdgeH edLEColrH   clear global edLMSzH edLDelH leColors leStyles leColorStr   close(leFig)   clear global leFig leStartXPos leStartYPos   clear global edLFColrH leStyleStrend