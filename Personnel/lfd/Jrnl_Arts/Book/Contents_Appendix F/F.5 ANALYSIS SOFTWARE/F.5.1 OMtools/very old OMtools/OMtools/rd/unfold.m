% unfold.m: Read in the unfolding adjustments for the data.% This is only used for IR data that has saturated and reflected% around the saturation limit.% written by: Jonathan Jacobs%             April 2000  (last mod: 04/14/01)unfold_err_flag = 1;unfold_file = upper( [shortname '.u'] );doUnfolding = enviroG(6);if ~doUnfolding   disp('*** Unfolding will NOT be applied (''enviro'' setting) ***')   return else   disp( ['Searching ' unfold_file ' for unfolding corrections. '])end% can we load the unfold file?isFile = eval( ['exist(''' unfold_file ''')'] );if (~isFile)   unfold_err_flag = 0;   disp([ sprintf('\b') ' ** None found **' ] )   %disp(['  <<It must be in the same directory as ' filename '>>'] )   returnend %(~isFile)[comp, maxsize] = computer;if strcmp( comp, 'MAC2' )   fid = fopen(unfold_file, 'r', 'l');  % little-endian else   fid = fopen(unfold_file, 'r');       % big-endianendunfold_text = fread(fid);unfold_text = char(unfold_text');fclose(fid);count = 0; isEOF = 0;while( ~isEOF )   % these five lines will read in the next non-empty line.   % if we are at the end of the file we return.  (Could put   % an error message in the 'if isEOF' structure below, if we wanted).   emptyLine = 1;   while( emptyLine )       [topline, unfold_text, emptyLine, isEOF] = getnextl(unfold_text);      if isEOF,return,end   end   topline = stripcom(topline);   [words, numWords] = procline(topline);   what_chan = words(1,:);   start_pt  = str2double(words(2,:));   stop_pt   = str2double(words(3,:));   % are the start & stop points within the range of the data?   goodPts = 1;   if (start_pt<1) || (start_pt>dat_len)  % dat_len is in rd_xxx      goodPts = 0;   end   if (stop_pt<1)  || (stop_pt>dat_len)      goodPts = 0;   end      % does the name in the '.u' file match the name of    % a column in 'newdata'?   hit = 0;   for i=1:chan_count      if strcmp(char(chName(i,:)), deblank(what_chan))         hit = i;         break;      end   end   % if the channel name in the '.u' file matches the name of   % data that was read in, and the start and stop pts are valid   % then we can flip the segment.   if hit && goodPts      temp = newdata(:, hit);    else      disp(['   *** ' what_chan ' is an unknown channel.'])      disp( '   *** ignoring.' )   end   posL= temp(start_pt);   seg = temp(start_pt:stop_pt);   seg = -(seg-posL) + posL;   temp(start_pt:stop_pt) = seg;   % place the unfolded data back into 'newdata'   newdata(:, hit) = temp;   endif (~debugme)   clear temp seg posL start_pt stop_pt count isEOF maxsize isFile   clear i what_chan topline words numWords emptyLine   clear fid unfold_text unfold_file in_text hit goodPtsend