% bridgeNaN.m:  If the input array has NaNs, replace them with a linear fit % between non-NaN points.  If the beginning or the end of the array are NaNs,% replace them with the value of the nearest non-NaN sample% Written by Jonathan Jacobs%            November 2004 - December (last mod:  12/06/04)function [out, num] = bridgenan(in,method);% arbitrarily, we will put the input array into COLUMN orientation, i.e.,% 'channels' are oriented vertically.[r,c] = size(in);flipped=0;if c > r   in = in';   flipped = 1;   temp = r;   r = c;   c = temp;endout = [];for i = 1:c   temp = in(:,i);       nanlist0 = [isnan(temp); 0];   nanlist1 = [0; isnan(temp)];   nanstarts = find((nanlist0-nanlist1)==1);   nanstops  = find((nanlist1-nanlist0)==1);   if isempty(nanstarts), break; end          % move along, nothing to see here.    if isempty(nanstops),  break; end       % make sure there is no trailing nanstop   if length(nanstops) > length(nanstarts)       nanstops = nanstops(1:end-1);   end         % belt and suspenders   if nanstops(end)>=length(in)       nanstops(end) = length(in);   end   % check each column of data   for j = 1:length(nanstarts)      startpt(j) = nanstarts(j)-1;      if  startpt(j)<1, startpt(j)=1; end      stoppt(j)  = nanstops(j);      xdiff = stoppt(j) - startpt(j);      % if 1st point in array is NaN, get the value following the string of NaNs      if isnan(temp(startpt(j)))        ystart = temp(stoppt(j));       else        ystart = temp(startpt(j));      end            ystop = temp(stoppt(j));      ydiff = ystop - ystart;      if isnan(ydiff), ydiff = 0; end      % make a linear fit across the gap      patch = ydiff/xdiff .* (1:xdiff) + ystart;       % in case 1st pt is a NaN, we will replace it with fixed 'ystart'      temp(startpt(j):stoppt(j)) = [ystart patch];   end      in(:,i) = temp;      end   out = in;