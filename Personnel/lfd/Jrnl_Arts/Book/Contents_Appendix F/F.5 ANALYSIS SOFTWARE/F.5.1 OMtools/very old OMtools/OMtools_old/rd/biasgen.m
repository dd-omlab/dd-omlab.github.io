% biasgen.m: generate an adjust bias file.% Usage: biasgen% You will be prompted for all relevant information.% Don't lie to the computer; that's not nice.% Written by:  Jonathan Jacobs%              August 1998 - September 2010 (last mod: 09/10/10)function biasgen(null)[comp, maxsize] = computer;            if strcmp( comp(1),'M' )   CR = [13]; else   CR = [13 10];endvers = version;vers = str2num(vers(1));oldpath = pwd;subjstr = input('Enter the subject''s initials: ','s');namestr = input('Enter the subject''s name: ','s');commentstr3 = input('Enter any comments: ','s');numrecs = input('Enter the number of records: ');method = lower(input('(R)obinson coil, (C)ollewijn coil, (I)R or (V)ideo? ','s'));format = lower(input('(L)abVIEW, (R)TRV, (O)ber, (A)SCII or (B)inary? ','s'));if strcmp(method,'i') | strcmp(method,'v')                % asymmetric cal types   if strcmp(method,'i'), mstr = 'IR'; end   if strcmp(method,'v'), mstr = 'VID'; end   calpts = lower(input('(N)ormal or (E)xtended calibration? ','s'));   if strcmp(calpts,'n')      adjstr = '  0  1  1';      h_adjstr = '  0  1  1';      v_adjstr = '  0  1  1';     else      adjstr = '  0   [15 20 25 30] 1 1 1 1  [-15 -20 -25 -30] 1 1 1 1';      h_adjstr = '  0   [15 20 25 30] 1 1 1 1  [-15 -20 -25 -30] 1 1 1 1';      v_adjstr = '  0   [10]  1  [-10]  1';    end elseif strcmp(method,'c')   mstr = 'COIL';   %scalestr = input('Enter scale factor (Default = 1): ','s');   %if isempty(scalestr), scalestr = '1'; end   adjstr = '  0   1'; elseif strcmp(method,'r')   mstr = 'RCoil';   calptstr = input('Enter calibration pt: ','s');   adjstr = ['  0   Inf   ' calptstr];endif strcmp(format,'a')   sampfstr = num2str(input('Enter the sampling frequency: '));   exten = '.txt';   fstr = 'ASCII';   orgstr = ''; elseif strcmp(format,'l')   sampfstr = '';   exten = '.lab';   fstr = 'LabVIEW';   orgstr = ''; elseif strcmp(format,'o')   sampfstr = '';   exten = '.obr';   fstr = 'Ober';   orgstr = '';elseif strcmp(format,'r')   sampfstr = '';   exten = '.dat';   fstr = 'RTRV';   orgstr = ''; elseif strcmp(format,'b')   sampfstr = num2str(input('Enter the sampling frequency: '));   organized = lower(input('(I)nterleaved or (C)ontiguous? ','s'));   exten = '.bin';   fstr = 'RAWBIN';   if strcmp( organized(1), 'i')      orgstr = '  Interleaved';    elseif strcmp( organized(1), 'c')      orgstr = '  Contiguous';    else      orgstr = '  Unknown';   end  endnumchans = input('Enter the number of channels: ');flag0 = 0; yorn = '';if numchans == 8   chanstr = ['rh';'lh';'hh';'rv';'lv';'hv';'rt';'lt'];  % coil rtrv, labv order   disp('Assuming channels: rh lh hh rv lv hv rt lt'); elseif numchans == 6   if strcmp(format, 'o')	   chanstr = ['st';'rh';'lh';'sv';'rv';'lv'];         % ober order	   disp('Assuming channels: st rh lh sv rv lv');    else	   chanstr = ['rh';'lh';'st';'rv';'lv';'sv'];         % EL2 order	   disp('Assuming channels: rh lh st rv lv sv');   end elseif numchans == 4   chanstr = ['lh';'rh';'lv';'rv'];         % ober order   disp('Assuming channels: lh rh lv rv'); elseif numchans == 3   if strcmp(format, 'l')      chanstr = ['rh';'lh';'st'];           % IR labview order      disp('Assuming channels: rh lh st');    else      chanstr = ['st';'rh';'lh'];           % IR rtrv order      disp('Assuming channels: st rh lh');   end elseif numchans == 2   if strcmp(format,'o')      chanstr = ['lh';'rh'];                % ober order      disp('Assuming channels: lh rh');    else        chanstr = ['rh';'lh'];                % IR labview, rtrv order      disp('Assuming channels: rh lh');   end else   flag0 = 1;   disp('No channel names known.')   chanstr = '--';endif ~flag0   yorn = lower(input('Is this correct (y/n)? ','s'));endif strcmp(yorn,'n') | flag0 == 1   for i=1:numchans      temp=input(['Enter the two-letter name for channel ' num2str(i) ': '],'s')'';      chanstr(i,1:2) = temp(1:2);   end else   %disp('Using default channel names')end% 'subjstr' may or may not have a '_' on the end.  We do not want it.if isempty(findstr(subjstr,'_'))   tempsubjstr = subjstr; else   tempsubjstr = subjstr(1:end-1);endadjbiasname = ['adjbias_' tempsubjstr '.txt'];[filename path] = uiputfile('*.*','Select the directory for the adjust file.', adjbiasname);clear tempsubjstrif filename == 0   disp('Cancelling.')   returnendeval(['cd ' '''' path ''''])fid = fopen(filename, 'wt'); a = exist('time');if a == 2    dstr = [' on ' time('d',1,24,1)];   tstr = [' at ' time('t',1,24,1)]; else   dstr = '';   tstr = '';end% commentstr3 is input at beginning of programcommentstr1 = ['% automagically generated by "biasgen"'];commentstr2 = ['%' dstr tstr];%%% 'st' recalibration factors updated 03/04/10. commentstr4a = ['% Hor Stim Scale Factors (±15-30¡) as of 4 Mar 2010: '];commentstr4b = ['%   st	 0.01  [15 20 25 30]	0.979 1.0 1.02 0.991	[-15 -20 -25 -30]	0.981 1.0 1.02 0.982'];%%% 'sv' zero shift depends on galvo vertical offset.  %%% will try to have LabVIEW write it to header, or (even better) correct for it before writing to filecommentstr5a = ['% Vrt Stim Scale Factors (±10¡): '];commentstr5b = ['%   sv  0  [10] 0.99  [-10] 1.043'];commentstr6 = ['% Files: 1-REcal; 2-LEcal; 3-BEgangle; 4-Rgaze; 5-Lgaze; 6-VrgSteps; 7-FNF; 8-SP; 9-SP; 10-Fix'];fwrite(fid, [commentstr1 CR]);fwrite(fid, [commentstr2 CR]);fwrite(fid, ['% ' namestr CR]);fwrite(fid, ['% ' commentstr3 CR]);fwrite(fid, [commentstr4a CR]);fwrite(fid, [commentstr4b CR]);fwrite(fid, [commentstr5a CR]);fwrite(fid, [commentstr5b CR]);fwrite(fid, [commentstr6 CR]);fwrite(fid, [CR]);for i = 1:numrecs   firstline = [subjstr num2str(i) exten '  ' num2str(numchans) '  '...                mstr '  ' fstr ' ' sampfstr ' ' orgstr  CR];   fwrite(fid,firstline);   for j = 1:numchans   	if strcmp( lower(chanstr(j,2)), 'v' )   		adjstr = v_adjstr;   	 else     		adjstr = h_adjstr;   	end	      nextline = [chanstr(j,1:2) '  ' adjstr CR];  % used to place 'sampfstr' here.      fwrite(fid, nextline);   end   fwrite(fid, CR);endfclose(fid);% if we are on a Mac, and 'filetype.m' and 'filetype.mex' are present we will use 'emif findstr(comp,'MAC')    if vers<=5 & (exist('filetype.m')==2 | exist('filetype.mex')==3)   disp('!')      [oldtype,oldcreator]=filetype(adjbiasname,'TEXT','R*ch');   end   enddisp(['Adjust bias file written to ' path]);eval(['cd ' '''' oldpath ''''],[';'])