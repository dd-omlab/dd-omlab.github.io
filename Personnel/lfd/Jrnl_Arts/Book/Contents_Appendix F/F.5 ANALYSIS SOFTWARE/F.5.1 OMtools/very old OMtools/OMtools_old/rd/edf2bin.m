% edf2lab.m: convert an edf2asc file to a MATLAB-readable% file with data in the following columns: [lh rh lv rv]%% NOTE: this program assumes that the original ".EDF" file% was converted to a ".ASC" file by the following command% issued from the DOS command line:%       "edf2asc filename.edf -ne -miss NaN"%  or%       "edf2asc filename.edf -s -miss NaN"%% Assumption: columns in edf->asc file: [index lh lv lpupil rh rv rpupil]% edf2bin will put it in this order: [lh rh lv rv]% Written by:  Jonathan Jacobs%              August 2000 - November 2003 (last mod: 11/24/03)% 24 Nov 03 -- edf files containing multiple trials will now be properly saved%              in .bin format             function edf2lab(null)% columns in edf->asc file: [index lh lv lpupil rh rv rpupil]% put it in this order: [lh rh lv rv]curdir = pwd;[fn, pn]=uigetfile('*.asc', 'Select a file to load');if fn == 0, disp('Aborted.'); return, endeval(['load ' ['''' pn fn '''']])fname = strtok(fn,'.');eval(['in = ' fname ';']);% let's find the separator rowsseps = find(isnan(in(:,1)));if isempty(seps)    % if there are no record separator lines, just    % use the last row of the data as the end point    [r,c] = size(in);    seps = r;end    begs = [1, (seps+1)'];ends = [(seps-1); 1]';fname=lower(fname);% two cases:% 1) single record/ EDF file.if length(seps)==1   dat = [in(begs:ends,2),...    % lh          in(begs:ends,5),...    % rh          -in(begs:ends,3),...   % lv, inverted!          -in(begs:ends,6) ];    % rv, inverted!   temp{1} = [fname '.bin'];   eval(['cd ' '''' pn ''''])   disp(['saving ' '''' pn temp{1} ''''])   fid = fopen(temp{1}, 'w', 'l');   fwrite(fid, dat, 'float');   fclose(fid);   cd(curdir) else   % 2) multiple recordings in an EDF file   % extract them all and save as xxx_1, xxx_2, etc...	for x = 1:length(seps)	   dat = [in(begs(x):ends(x),2),...    % lh	          in(begs(x):ends(x),5),...    % rh	          -in(begs(x):ends(x),3),...   % lv, inverted!	          -in(begs(x):ends(x),6) ];    % rv, inverted!	   temp{x} = [fname '_' num2str(x) '.bin'];       	   disp(['saving ' '''' pn temp{x} ''''])	   fid = fopen(temp{x}, 'w', 'l');	   fwrite(fid, dat, 'float');	   fclose(fid);	endend%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% no longer works as of OS X% set the file type (Mac only)%   if (0) %%% saveformat == 'a'%      exten = '.txt';%      ftype = 'TEXT';%      creator = 'R*ch';%    else%      exten = '.bin';%      ftype = '    ';%      creator = 'dosa';%   end%comp=computer;%if strcmp(comp,'MAC2') & exist('filetype.m') == 2 & exist('filetype.mex') == 3%   disp('Changing filetype and creator.')%   cd(pn)%   for i = 1:length(seps)%      [oldtype,oldcreator]=filetype(temp{i}, ftype, creator);%   end%   cd(curdir)%end