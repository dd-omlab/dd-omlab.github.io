% rd_bin.m:    called by RD to handle .bin data files that have%              NO header information% written by:  Jonathan Jacobs%              March 1997 - February 2004 (last mod: 02/25/04)% 01/30/03: added line "clear newdata" to guarantee ability to load%           multiple datasets%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%clear newdata% open the bin fileif comp(1) == 'M'   fidBIN = fopen( [pathname filename], 'r', 'l'); else   fidBIN = fopen( [pathname filename], 'r' );endb_files = b_files + 1;total_files = r_files + a_files + b_files...                   + o_files + x_files + l_files;% read in the datafseek(fidBIN, 0, 'bof');[tempdata, numsamps] = fread(fidBIN,inf,'float32');% since we don't actually know yet. Will get an answer when bias info is loadeddat_cols = 0;dat_len = 0;% getbias will look for channel info, or will prompt user to input it.% (once we know the number of channels we can separate the data into% those proper channels and apply the bias at the end of this script)getbiasdat_len = numsamps/numChan;disp( ['  Sampling frequency: ' num2str(tempSampFreq)] );disp( ['  Duration of record: ' num2str(dat_len/tempSampFreq)] );fclose(fidBIN); clear fidBIN% Is the data stored contiguously or is it interleaved% c: {ch1samp1...ch1sampN, ch2samp1...ch2sampN, ... , chMsamp1...chMsampN}% i: {ch1samp1 ch2samp1...chMsampN, ... , ch1sampN ch2sampN...chMsampN}if organization(1) == 'u'   % do something clever here to let the user see  the results of   % each options and choose which one is better?end   if organization(1) == 'c'	% data stored as contiguous blocks	for i = 1:numChan	   newdata(:,i) = tempdata( (i-1)*dat_len+1: dat_len*i);	end elseif organization(1) == 'i'	% data stored interleaved	for i = 1:numChan	   ind = (0:dat_len-1)*numChan + i;	   newdata(:,i) = tempdata(ind);	endend  [dat_len, dat_cols] = size( newdata );disp( ['  Channels found:     ' num2str(dat_cols)] );disp( ['  Samples found:      ' num2str(dat_len)] );% will then use the info to separate the raw binary stream into channels% and then apply the offset and scaling factorsapplybiasclear fidBIN i commStrLen numChans dat_len temp countclear tempdata numsamps commOffset